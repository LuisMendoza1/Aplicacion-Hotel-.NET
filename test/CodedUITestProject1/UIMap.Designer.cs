// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas de IU codificadas.
//      Versión: 14.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AbrirInternetExplorer: use 'AbrirInternetExplorerParams' para pasar parámetros a este método.
        /// </summary>
        public void AbrirInternetExplorer()
        {

            // Iniciar '%SystemRoot%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' con los argumentos '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
            //ApplicationUnderTest microsoftEdgeApplication = ApplicationUnderTest.Launch(this.AbrirInternetExplorerParams.ExePath, this.AbrirInternetExplorerParams.AlternateExePath, "-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca");
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.InicioInternetExplorerParams.UIGoogleInternetExplorWindowUrl));

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.

            // Para probar aplicaciones de la Tienda Windows, use la plantilla de proyecto Prueba de IU codificada para aplicaciones de la Tienda Windows bajo el nodo relativo a dicha tienda.
        }
        
        /// <summary>
        /// AccederHabitacionNoOcupada
        /// </summary>
        public void AccederHabitacionNoOcupada()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink1 = this.UIIndexTeamCatHotelIntWindow.UIIndexTeamCatHotelDocument.UIDetailsHyperlink1;
            #endregion

            // Clic 'Details' vínculo
            Mouse.Click(uIDetailsHyperlink1, new Point(26, 13));
        }
        
        /// <summary>
        /// AccederServicioSauna
        /// </summary>
        public void AccederServicioSauna()
        {
            #region Variable Declarations
            HtmlInputButton uISeleccionarServicioButton = this.UIDetailsTeamCatHotelIWindow1.UIListaserviciosTeamCaDocument.UISeleccionarServicioButton;
            #endregion

            // Clic 'Seleccionar Servicio' botón
            Mouse.Click(uISeleccionarServicioButton, new Point(110, 20));
        }
        
        /// <summary>
        /// AccesoDetallesHabitacionOcupada
        /// </summary>
        public void AccesoDetallesHabitacionOcupada()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIIndexTeamCatHotelIntWindow.UIIndexTeamCatHotelDocument.UIDetailsHyperlink;
            #endregion

            // Clic 'Details' vínculo
            Mouse.Click(uIDetailsHyperlink, new Point(23, 12));
        }
        
        /// <summary>
        /// AccesoSolicitarServicio
        /// </summary>
        public void AccesoSolicitarServicio()
        {
            #region Variable Declarations
            HtmlHyperlink uISolicitarServicioHyperlink = this.UIDetailsTeamCatHotelIWindow1.UIDetailsTeamCatHotelDocument.UISolicitarServicioHyperlink;
            #endregion

            // Clic 'Solicitar Servicio' vínculo
            Mouse.Click(uISolicitarServicioHyperlink, new Point(40, 5));
        }
        
        /// <summary>
        /// AssertExisteSaunaParaSeleccionar: use 'AssertExisteSaunaParaSeleccionarExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertExisteSaunaParaSeleccionar()
        {
            #region Variable Declarations
            HtmlCell uISaunaCell = this.UIDetailsTeamCatHotelIWindow1.UIListaserviciosTeamCaDocument.UIItemTable.UISaunaCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Sauna' celda es igual a 'Sauna '
            Assert.AreEqual(this.AssertExisteSaunaParaSeleccionarExpectedValues.UISaunaCellInnerText, uISaunaCell.InnerText);
        }
        
        /// <summary>
        /// AssertHabitacionOcupada: use 'AssertHabitacionOcupadaExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertHabitacionOcupada()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemCheckBox = this.UIDetailsTeamCatHotelIWindow1.UIDetailsTeamCatHotelDocument.UIItemCheckBox;
            #endregion

            // Compruebe que la propiedad 'Value' de casilla es igual a 'on'
            Assert.AreEqual(this.AssertHabitacionOcupadaExpectedValues.UIItemCheckBoxValue, uIItemCheckBox.Value);
        }
        
        /// <summary>
        /// AssertLogInShown: use 'AssertLogInShownExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertLogInShown()
        {
            #region Variable Declarations
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UILoginButton;
            #endregion

            // Esperar durante 3 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
            Playback.Wait(3000);
            Assert.AreEqual(this.AssertLogInShownExpectedValues.UILoginButtonDisplayText, uILoginButton.DisplayText);
        }
        
        /// <summary>
        /// AssertVerificarLoginRecepcionista: use 'AssertVerificarLoginRecepcionistaExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertVerificarLoginRecepcionista()
        {
            #region Variable Declarations
            HtmlHyperlink uIHellorecepcionistahoHyperlink = this.UIIndexTeamCatHotelIntWindow.UIIndexTeamCatHotelDocument.UILogoutFormCustom.UIHellorecepcionistahoHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Hello recepcionista@hotel.fbk!' vínculo es igual a 'Hello recepcionista@hotel.fbk!'
            Assert.AreEqual(this.AssertVerificarLoginRecepcionistaExpectedValues.UIHellorecepcionistahoHyperlinkInnerText, uIHellorecepcionistahoHyperlink.InnerText, "Se verifica que se ha hecho el login");
        }
        
        /// <summary>
        /// AssertVolverListadoHabitaciones: use 'AssertVolverListadoHabitacionesExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertVolverListadoHabitaciones()
        {
            #region Variable Declarations
            WinEdit uIDirecciónEdit = this.UIGoogleInternetExplorWindow.UIItemWindow.UIBarradedireccionesClient.UIDirecciónEdit;
            #endregion

            // Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto es igual a 'Habitacions'
            Assert.AreEqual(this.AssertVolverListadoHabitacionesExpectedValues.UIDirecciónEditText, uIDirecciónEdit.Text);
        }
        
        /// <summary>
        /// AssertVueltaMenuMsgNoOcupada: use 'AssertVueltaMenuMsgNoOcupadaExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertVueltaMenuMsgNoOcupada()
        {
            #region Variable Declarations
            WinEdit uIDirecciónEdit = this.UIGoogleInternetExplorWindow.UIItemWindow.UIBarradedireccionesClient.UIDirecciónEdit;
            #endregion

            // Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto contiene 'ocupada=False'
            StringAssert.Contains(uIDirecciónEdit.Text, this.AssertVueltaMenuMsgNoOcupadaExpectedValues.UIDirecciónEditText, "Comprueba que la URL de redireccion es con ocupada=False");
        }
        
        /// <summary>
        /// CancelarDesdeSeleccionarServiciosFechas
        /// </summary>
        public void CancelarDesdeSeleccionarServiciosFechas()
        {
            #region Variable Declarations
            HtmlHyperlink uICancelarHyperlink = this.UIDetailsTeamCatHotelIWindow1.UIConfirmacionServicioDocument1.UIFrmCustom.UICancelarHyperlink;
            #endregion

            // Clic 'Cancelar' vínculo
            Mouse.Click(uICancelarHyperlink, new Point(72, 12));
        }
        
        /// <summary>
        /// Se ejecuta la accion de cancelar el pedido
        /// </summary>
        public void CancelarPedido()
        {
            #region Variable Declarations
            HtmlHyperlink uICancelarpedidoHyperlink = this.UIConfirmarPedidoTeamCWindow.UIConfirmarPedidoTeamCDocument.UICancelarpedidoHyperlink;
            #endregion

            // Clic 'Cancelar pedido' vínculo
            Mouse.Click(uICancelarpedidoHyperlink, new Point(27, 10));
        }
        
        /// <summary>
        /// CancelarSolicitarServicio
        /// </summary>
        public void CancelarSolicitarServicio()
        {
            #region Variable Declarations
            HtmlHyperlink uICancelarHyperlink = this.UIDetailsTeamCatHotelIWindow1.UIListaserviciosTeamCaDocument.UICancelarHyperlink;
            #endregion

            // Clic 'Cancelar' vínculo
            Mouse.Click(uICancelarHyperlink, new Point(79, 16));
        }
        
        /// <summary>
        /// Borrar reserva creada en la prueba.
        /// </summary>
        public void CleanUpReservaMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uIReservasHyperlink = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument.UIReservasHyperlink;
            HtmlHyperlink uIDeleteHyperlink = this.UIGoogleInternetExplorWindow.UIIndexTeamCatHotelDocument.UIDeleteHyperlink;
            HtmlInputButton uIDeleteButton = this.UIIndiceClienteTeamCatWindow2.UIDeleteTeamCatHotelDocument.UIDeleteButton;
            #endregion

            // Clic 'Reservas' vínculo
            Mouse.Click(uIReservasHyperlink, new Point(45, 31));

            // Clic 'Delete' vínculo
            Mouse.Click(uIDeleteHyperlink, new Point(26, 9));

            // Clic 'Delete' botón
            Mouse.Click(uIDeleteButton, new Point(13, 16));
        }
        
        /// <summary>
        /// Un simple click sobre en enlace "Cancel" que cancela el proceso de contratar un menu.
        /// </summary>
        public void ClickCancelarContratarMenu()
        {
            #region Variable Declarations
            HtmlHyperlink uICancelHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UICancelHyperlink;
            #endregion

            // Clic 'Cancel' vínculo
            Mouse.Click(uICancelHyperlink, new Point(27, 9));
        }
        
        /// <summary>
        /// Entrada en indice de reservas
        /// </summary>
        public void ClickReservasMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uIReservasHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UIReservasHyperlink;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Clic 'Reservas' vínculo
            Playback.Wait(5000);
            Mouse.Click(uIReservasHyperlink, new Point(55, 28));
        }
        
        /// <summary>
        /// Comprueba que el cliente encontrado corresponde con la búsqueda.
        /// </summary>
        public void ClienteDNIEncontradoAssert()
        {
            #region Variable Declarations
            HtmlCell uIItem12345678KCell = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument1.UIItemTable.UIItem12345678KCell;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'InnerText' de '12345678K' celda es igual a '12345678K '
            Playback.Wait(5000);
            Assert.AreEqual(this.ClienteDNIEncontradoAssertExpectedValues.UIItem12345678KCellInnerText, uIItem12345678KCell.InnerText, "El cliente encontrado no tiene el DNI buscado");
        }
        
        /// <summary>
        /// Cierra el navegador Internet Explorer
        /// </summary>
        public void CloseInternetExplorer()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UISeleccionarProductosWindow3.UISeleccionarProductosTitleBar.UICerrarButton;
            #endregion

            // Clic 'Cerrar' botón
            Mouse.Click(uICerrarButton, new Point(22, 15));
        }
        
        /// <summary>
        /// Comprobacion de que el camarero ha iniciado sesión de manera correcta
        /// </summary>
        public void ComprobacionInicioSesionCamarero()
        {
            #region Variable Declarations
            HtmlHyperlink uIHellocamarerohotelfbHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UILogoutFormCustom.UIHellocamarerohotelfbHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Hello camarero@hotel.fbk!' vínculo es igual a 'Hello camarero@hotel.fbk!'
            Assert.AreEqual(this.ComprobacionInicioSesionCamareroExpectedValues.UIHellocamarerohotelfbHyperlinkInnerText, uIHellocamarerohotelfbHyperlink.InnerText, "Error, no iniciado sesion");
        }
        
        /// <summary>
        /// Se comprueba el mensaje de correcto de la contratación del menú.
        /// </summary>
        public void ComprobacionMensajeCorrectoContratacionMenu()
        {
            #region Variable Declarations
            HtmlLabel uISuccessLabel = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UISuccessLabel;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Success' etiqueta es igual a 'Success'
            Assert.AreEqual(this.ComprobacionMensajeCorrectoContratacionMenuExpectedValues.UISuccessLabelInnerText, uISuccessLabel.InnerText, "No creado");
        }
        
        /// <summary>
        /// Se comprueba el mensaje de error que avisa que el menú ha sido contratado fuera de hora.
        /// </summary>
        public void ComprobacionMensajeErrorFueraDeHoraMenu()
        {
            #region Variable Declarations
            HtmlLabel uIErrorOutoftimeLabel = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIErrorOutoftimeLabel;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Error: Out of time' etiqueta es igual a 'Error: Out of time'
            Assert.AreEqual(this.ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues.UIErrorOutoftimeLabelInnerText, uIErrorOutoftimeLabel.InnerText, "Creado correctamente");
        }
        
        /// <summary>
        /// Se comprueba el mensaje de reserva no encontrada a la hora de intentar contratar un menú con un núm. habitación sin reserva asociada en proceso.
        /// </summary>
        public void ComprobacionMensajeErrorReservaNoEncontrada()
        {
            #region Variable Declarations
            HtmlLabel uIErrorReservanotfoundLabel = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIErrorReservanotfoundLabel;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Error: Reserva not found' etiqueta es igual a 'Error: Reserva not found'
            Assert.AreEqual(this.ComprobacionMensajeErrorReservaNoEncontradaExpectedValues.UIErrorReservanotfoundLabelInnerText, uIErrorReservanotfoundLabel.InnerText, "Reserva encontrada");
        }
        
        /// <summary>
        /// Se comprueba que se ha obtenido un mensaje con la información del cliente antes de la confirmación de la contratacion del menu.
        /// </summary>
        public void ComprobacionMensajeInformacionAntesDeConfirmar()
        {
            #region Variable Declarations
            HtmlLabel uIClienteMurielHabichuLabel = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIClienteMurielHabichuLabel;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Cliente: Muriel Habichuela Pulse de nuevo contrata...' etiqueta es igual a 'Cliente: Muriel Habichuela Pulse de nuevo contratar para confirmar.'
            Assert.AreEqual(this.ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues.UIClienteMurielHabichuLabelInnerText, uIClienteMurielHabichuLabel.InnerText, "Cliente erroneo");
        }
        
        /// <summary>
        /// Se comprueba que el TextBox del Num.habitacion está vacio.
        /// </summary>
        public void ComprobacionTextBoxNumHabitacionVacio()
        {
            #region Variable Declarations
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'nHabitacion' cuadro de texto es igual a 'INPUT'
            Assert.AreEqual(this.ComprobacionTextBoxNumHabitacionVacioExpectedValues.UINHabitacionEditTagName, uINHabitacionEdit.TagName, "Vacio");
        }
        
        /// <summary>
        /// Comprobación de que se está en la web http://localhost:21013/Menus/ContratarMenu
        /// </summary>
        public void ComprobacionWebContratarMenu()
        {
            #region Variable Declarations
            WinEdit uIDirecciónEdit = this.UIGoogleInternetExplorWindow.UIItemWindow.UIBarradedireccionesClient.UIDirecciónEdit;
            #endregion

            // Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto es igual a 'http://localhost:21013/Menus/ContratarMenu'
            Assert.AreEqual(this.ComprobacionWebContratarMenuExpectedValues.UIDirecciónEditText, uIDirecciónEdit.Text, "Error direccion web");
        }
        
        /// <summary>
        /// Se comprueba que se listen los proveedores correctamente
        /// </summary>
        public void ComprobarComboBoxProveedores()
        {
            #region Variable Declarations
            HtmlComboBox uIIdProveedorComboBox = this.UISeleccionarProveedorWindow.UISeleccionarProveedorDocument.UIIdProveedorComboBox;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'idProveedor' cuadro combinado es igual a 'PedroSL  JoseSL  FranciscoSL  '
            Assert.AreEqual(this.ComprobarComboBoxProveedoresExpectedValues.UIIdProveedorComboBoxInnerText, uIIdProveedorComboBox.InnerText, "Se comprueba que aparezcan los proveedores");
        }
        
        /// <summary>
        /// Comprueba el error mostrado por ser una cantidad mayor que cien
        /// </summary>
        public void ComprobarErrorMayorCien()
        {
            #region Variable Declarations
            HtmlCustom uIErrorLacantidadnopueCustom = this.UISeleccionarProductosWindow2.UISeleccionarProductosDocument.UIErrorLacantidadnopueCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Error. La cantidad no puede ser mayor qu' control personalizado es igual a 'Error. La cantidad no puede ser mayor que 100.'
            Assert.AreEqual(this.ComprobarErrorMayorCienExpectedValues.UIErrorLacantidadnopueCustomInnerText, uIErrorLacantidadnopueCustom.InnerText, "error equivocado");
        }
        
        /// <summary>
        /// Comprueba que se ha iniciado correctamente la sesion del encargado del almacen
        /// </summary>
        public void ComprobarInicioSesionEAlmacen()
        {
            #region Variable Declarations
            HtmlHyperlink uIHelloealmacenhotelfbHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UILogoutFormCustom.UIHelloealmacenhotelfbHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Hello ealmacen@hotel.fbk!' vínculo es igual a 'Hello ealmacen@hotel.fbk!'
            Assert.AreEqual(this.ComprobarInicioSesionEAlmacenExpectedValues.UIHelloealmacenhotelfbHyperlinkInnerText, uIHelloealmacenhotelfbHyperlink.InnerText, "No se ha iniciado sesion como encargado de almacen");
        }
        
        /// <summary>
        /// Se comprueba que los datos del resumen del pedido sean correctos
        /// </summary>
        public void ComprobarResumenPedido()
        {
            #region Variable Declarations
            HtmlCell uIPedroSLCell = this.UIConfirmarPedidoTeamCWindow.UIConfirmarPedidoTeamCDocument.UIItemTable.UIPedroSLCell;
            HtmlCell uIToallaCell = this.UIConfirmarPedidoTeamCWindow.UIConfirmarPedidoTeamCDocument.UIItemTable1.UIToallaCell;
            HtmlCell uIItem1Cell = this.UIConfirmarPedidoTeamCWindow.UIConfirmarPedidoTeamCDocument.UIItemTable1.UIItem1Cell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'PedroSL' celda es igual a 'PedroSL  '
            Assert.AreEqual(this.ComprobarResumenPedidoExpectedValues.UIPedroSLCellInnerText, uIPedroSLCell.InnerText, "No es el proveedor seleccionado");

            // Compruebe que la propiedad 'InnerText' de 'Toalla' celda es igual a 'Toalla  '
            Assert.AreEqual(this.ComprobarResumenPedidoExpectedValues.UIToallaCellInnerText, uIToallaCell.InnerText, "No es el producto seleccionado");

            // Compruebe que la propiedad 'InnerText' de '1' celda es igual a '1  '
            Assert.AreEqual(this.ComprobarResumenPedidoExpectedValues.UIItem1CellInnerText, uIItem1Cell.InnerText, "No es la cantidad seleccionada");
        }
        
        /// <summary>
        /// Se confirma fecha de inicio y fecha de fin
        /// </summary>
        public void ConfimarServicioSauna()
        {
            #region Variable Declarations
            HtmlEdit uIFechainicioEdit = this.UIDetailsTeamCatHotelIWindow1.UIConfirmacionServicioDocument.UIFechainicioEdit;
            HtmlEdit uIFechafinEdit = this.UIDetailsTeamCatHotelIWindow1.UIConfirmacionServicioDocument.UIFechafinEdit;
            HtmlInputButton uIConfirmarSolicitudButton = this.UIDetailsTeamCatHotelIWindow1.UIConfirmacionServicioDocument.UIFrmCustom.UIConfirmarSolicitudButton;
            #endregion

            // Escribir '2016-12-18T22:24' en cuadro de texto 'Fecha inicio:'
            uIFechainicioEdit.Text = this.ConfimarServicioSaunaParams.UIFechainicioEditText;

            // Escribir '2016-12-24T22:24' en cuadro de texto 'Fecha fin:'
            uIFechafinEdit.Text = this.ConfimarServicioSaunaParams.UIFechafinEditText;

            // Clic 'Confirmar Solicitud' botón
            Mouse.Click(uIConfirmarSolicitudButton, new Point(69, 24));
        }
        
        /// <summary>
        /// Se realiza una contratacion del menú antes de confirmar el contrato del menú.
        ///Menu: Comida, Num.Habitacion: 2
        ///Hora local del sistema: 14:11
        /// </summary>
        public void ContratarMenuAntesDeConfirmar()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument1.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox1;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(38, 20));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox1.SelectedItem = this.ContratarMenuAntesDeConfirmarParams.UIMenuIdComboBox1SelectedItem;

            // Escribir '2' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuAntesDeConfirmarParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(38, 8));
        }
        
        /// <summary>
        /// Método el cual cancela el proceso en la ventana de la pregunta del numero de comensales
        /// </summary>
        public void ContratarMenuCancelarNumeroComensales()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox2 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox2;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            HtmlInputButton uIContratarButton2 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton2;
            HtmlHyperlink uICancelHyperlink = this.UIGoogleInternetExplorWindow.UISeleccionComensalesTDocument.UICancelHyperlink;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(64, 27));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox2.SelectedItem = this.ContratarMenuCancelarNumeroComensalesParams.UIMenuIdComboBox2SelectedItem;

            // Escribir '1' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuCancelarNumeroComensalesParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(26, 7));

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton2, new Point(28, 13));

            // Clic 'Cancel' vínculo
            Mouse.Click(uICancelHyperlink, new Point(27, 8));
        }
        
        /// <summary>
        /// Metodo en el cual se le ha dado click a contratar y estamos en la fase de confirmacion
        /// </summary>
        public void ContratarMenuCancelarPrimerContratar()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox2 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox2;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            HtmlHyperlink uICancelHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UICancelHyperlink;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(35, 20));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox2.SelectedItem = this.ContratarMenuCancelarPrimerContratarParams.UIMenuIdComboBox2SelectedItem;

            // Escribir '1' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuCancelarPrimerContratarParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(24, 3));

            // Clic 'Cancel' vínculo
            Mouse.Click(uICancelHyperlink, new Point(22, 5));
        }
        
        /// <summary>
        /// Es un click en el boton contratar
        /// </summary>
        public void ContratarMenuClickConfirmar()
        {
            #region Variable Declarations
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            #endregion

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(41, 14));
        }
        
        /// <summary>
        /// Se ha realizado una contratación de menu con el num.Habitación 2 y el menú comida.
        ///Hora del sistema: 14:14
        /// </summary>
        public void ContratarMenuConExito()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox1;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(44, 17));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox1.SelectedItem = this.ContratarMenuConExitoParams.UIMenuIdComboBox1SelectedItem;

            // Escribir '2' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuConExitoParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(43, 11));

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(42, 8));
        }
        
        /// <summary>
        /// Se intenta hacer una contratación de menú con un numero de habitación que no tiene asociado ninguna reserva en cosumición.
        ///Menu: Comida, Num. Habitacion: 666
        ///Hora del sistema: 14:07
        /// </summary>
        public void ContratarMenuConReservaNoValida()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox1;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(23, 23));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox1.SelectedItem = this.ContratarMenuConReservaNoValidaParams.UIMenuIdComboBox1SelectedItem;

            // Escribir '666' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuConReservaNoValidaParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(31, 12));
        }
        
        /// <summary>
        /// Se intenta contratar un menú fuera de la hora establecida por dicho menú.
        ///En este caso se prueba con la habitación 2, Menu: Desayuno.
        ///Hora del sistema: 14:03
        /// </summary>
        public void ContratarMenuFueraDeHora()
        {
            #region Variable Declarations
            HtmlComboBox uIMenuIdComboBox1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox1;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            #endregion

            // Seleccionar 'Desayuno' en cuadro combinado 'menuId'
            uIMenuIdComboBox1.SelectedItem = this.ContratarMenuFueraDeHoraParams.UIMenuIdComboBox1SelectedItem;

            // Escribir '2' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuFueraDeHoraParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(39, 9));
        }
        
        /// <summary>
        /// Se ha contratado un menu sin el regimen oportuno de comidas.
        ///Numero habitacion: 1, Menu: Comida, N.Comensales: 3
        ///Hora local del sistema: 14:04
        /// </summary>
        public void ContratarMenuSinRegimenOportuno()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarMenuHyperlink;
            HtmlComboBox uIMenuIdComboBox1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIMenuIdComboBox1;
            HtmlEdit uINHabitacionEdit = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UINHabitacionEdit;
            HtmlInputButton uIContratarButton1 = this.UIGoogleInternetExplorWindow.UIContratarMenuTeamCatDocument.UIContratarButton1;
            HtmlEdit uINComensalesEdit = this.UIGoogleInternetExplorWindow.UISeleccionComensalesTDocument.UINComensalesEdit;
            HtmlInputButton uICreateButton = this.UIGoogleInternetExplorWindow.UISeleccionComensalesTDocument.UICreateButton;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(56, 16));

            // Seleccionar 'Comida' en cuadro combinado 'menuId'
            uIMenuIdComboBox1.SelectedItem = this.ContratarMenuSinRegimenOportunoParams.UIMenuIdComboBox1SelectedItem;

            // Escribir '1' en cuadro de texto 'nHabitacion'
            uINHabitacionEdit.Text = this.ContratarMenuSinRegimenOportunoParams.UINHabitacionEditText;

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(34, 18));

            // Clic 'Contratar' botón
            Mouse.Click(uIContratarButton1, new Point(53, 11));

            // Escribir '3' en cuadro de texto 'nComensales'
            uINComensalesEdit.Text = this.ContratarMenuSinRegimenOportunoParams.UINComensalesEditText;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(35, 6));
        }
        
        /// <summary>
        /// Inicio del CU-HacerReserva
        /// </summary>
        public void CrearNuevaReservaMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uICrearnuevareservaHyperlink = this.UIGoogleInternetExplorWindow.UIIndexTeamCatHotelDocument.UICrearnuevareservaHyperlink;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Clic 'Crear nueva reserva' vínculo
            Playback.Wait(5000);
            Mouse.Click(uICrearnuevareservaHyperlink, new Point(37, 8));
        }
        
        /// <summary>
        /// Comprobación de los datos del cliente
        /// </summary>
        public void DatosClienteCorrectosAssert()
        {
            #region Variable Declarations
            HtmlCustom uIItem12345678KCustom = this.UIDetailsTeamCatHotelIWindow.UIDetailsTeamCatHotelDocument.UIItem12345678KCustom;
            HtmlCustom uIEustaquioCustom = this.UIDetailsTeamCatHotelIWindow.UIDetailsTeamCatHotelDocument.UIEustaquioCustom;
            HtmlCustom uIHabichuelaCustom = this.UIDetailsTeamCatHotelIWindow.UIDetailsTeamCatHotelDocument.UIHabichuelaCustom;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'InnerText' de '12345678K' control personalizado es igual a '12345678K '
            Playback.Wait(5000);
            Assert.AreEqual(this.DatosClienteCorrectosAssertExpectedValues.UIItem12345678KCustomInnerText, uIItem12345678KCustom.InnerText, "Los datos no corresponden con los del cliente buscado");

            // Compruebe que la propiedad 'InnerText' de 'Eustaquio' control personalizado es igual a 'Eustaquio '
            Assert.AreEqual(this.DatosClienteCorrectosAssertExpectedValues.UIEustaquioCustomInnerText, uIEustaquioCustom.InnerText, "El nombre no corresponde con el del cliente");

            // Compruebe que la propiedad 'InnerText' de 'Habichuela' control personalizado es igual a 'Habichuela '
            Assert.AreEqual(this.DatosClienteCorrectosAssertExpectedValues.UIHabichuelaCustomInnerText, uIHabichuelaCustom.InnerText, "El apellido no corresponde con el del cliente");
        }
        
        /// <summary>
        /// EntramosEnHabitaciones: use 'EntramosEnHabitacionesParams' para pasar parámetros a este método.
        /// </summary>
        public void EntramosEnHabitaciones()
        {
            #region Variable Declarations
            HtmlDiv uISitecss1bodyPane = this.UILoginTeamCatHotelIntWindow1.UIDOMExplorerDocument.UIStyleListPane.UISitecss1bodyPane;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UIPasswordEdit;
            WinToolBar uIAplicacionesenejecucToolBar = this.UIAplicacionesenejecucWindow.UIAplicacionesenejecucClient.UIAplicacionesenejecucToolBar;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UILoginButton;
            #endregion

            // Establezca la marca para permitir que la reproducción continúe si no hay errores en ninguna acción esencial. (Por ejemplo, si el error es en una acción de mantener el mouse.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mantener el mouse sobre panel 'site.css (1) body{...}' en (1, 1)
            Mouse.Hover(uISitecss1bodyPane, new Point(1, 1));

            // Restablezca la marca para asegurarse de que la reproducción se detenga si hay un error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Escribir 'recepcionista' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.EntramosEnHabitacionesParams.UIEmailEditText;

            // Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.EntramosEnHabitacionesParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.EntramosEnHabitacionesParams.UIEmailEditText1;

            // Escribir '{Tab}' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.EntramosEnHabitacionesParams.UIEmailEditSendKeys1, ModifierKeys.None);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.EntramosEnHabitacionesParams.UIPasswordEditPassword;

            // Escribir '********' en cuadro de texto 'Password'
            Keyboard.SendKeys(uIPasswordEdit, this.EntramosEnHabitacionesParams.UIPasswordEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control), true);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.EntramosEnHabitacionesParams.UIPasswordEditPassword1;

            // Establezca la marca para permitir que la reproducción continúe si no hay errores en ninguna acción esencial. (Por ejemplo, si el error es en una acción de mantener el mouse.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mantener el mouse sobre panel 'site.css (1) body{...}' en (1, 1)
            Mouse.Hover(uISitecss1bodyPane, new Point(1, 1));

            // Restablezca la marca para asegurarse de que la reproducción se detenga si hay un error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Clic 'Aplicaciones en ejecución' barra de herramientas
            Mouse.Click(uIAplicacionesenejecucToolBar, new Point(1129, 10));

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(48, 14));
        }
        
        /// <summary>
        /// EntrarLogin
        /// </summary>
        public void EntrarLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UILoginHyperlink;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Clic 'Log in' vínculo
            Playback.Wait(5000);
            Mouse.Click(uILoginHyperlink, new Point(41, 21));
        }
        
        /// <summary>
        /// EntrarMenuHabitaciones
        /// </summary>
        public void EntrarMenuHabitaciones()
        {
            #region Variable Declarations
            HtmlHyperlink uIHabitacionesHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UIHabitacionesHyperlink;
            #endregion

            // Clic 'Habitaciones' vínculo
            Mouse.Click(uIHabitacionesHyperlink, new Point(48, 23));
        }
        
        /// <summary>
        /// Comprueba que se muestra el error al no seleccionar habitacion.
        /// </summary>
        public void ErrorNoHabitacionAssert()
        {
            #region Variable Declarations
            HtmlCustom uINohaseleccionadoningCustom = this.UINuevaReservaDatosResWindow2.UINuevaReservaDatosResDocument.UINohaseleccionadoningCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No ha seleccionado ninguna habitacion' control personalizado es igual a 'No ha seleccionado ninguna habitacion'
            Assert.AreEqual(this.ErrorNoHabitacionAssertExpectedValues.UINohaseleccionadoningCustomInnerText, uINohaseleccionadoningCustom.InnerText, "No se muestra el error");
        }
        
        /// <summary>
        /// ErrorProveedorSinProductos: use 'ErrorProveedorSinProductosExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void ErrorProveedorSinProductos()
        {
            #region Variable Declarations
            HtmlCustom uIErrorElproveedorseleCustom = this.UISeleccionarProveedorWindow.UISeleccionarProveedorDocument.UIErrorElproveedorseleCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Error. El proveedor seleccionado no tien' control personalizado es igual a 'Error. El proveedor seleccionado no tiene productos. Seleccione uno distinto.'
            Assert.AreEqual(this.ErrorProveedorSinProductosExpectedValues.UIErrorElproveedorseleCustomInnerText, uIErrorElproveedorseleCustom.InnerText, "no error");
        }
        
        /// <summary>
        /// Se escribe un numero negativo en las cantidades
        /// </summary>
        public void EscribirNumNegativoEnCantidades()
        {
            #region Variable Declarations
            HtmlEdit uIListaCantidadesEdit = this.UISeleccionarProductosWindow.UISeleccionarProductosDocument.UIListaCantidadesEdit;
            #endregion

            // Escribir '-1' en cuadro de texto 'listaCantidades'
            uIListaCantidadesEdit.Text = this.EscribirNumNegativoEnCantidadesParams.UIListaCantidadesEditText;
        }
        
        /// <summary>
        /// Comprueba que se muestra el error asociado a introducir la fecha de inicio antes de la fecha actual.
        /// </summary>
        public void FechaAnteriorAHoyAssert()
        {
            #region Variable Declarations
            HtmlCustom uIOopslasfechasintroduCustom = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIOopslasfechasintroduCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Oops, las fechas introducidas no pueden' control personalizado es igual a 'Oops, las fechas introducidas no pueden ser anteriores a la fecha actual'
            Assert.AreEqual(this.FechaAnteriorAHoyAssertExpectedValues.UIOopslasfechasintroduCustomInnerText, uIOopslasfechasintroduCustom.InnerText, "La fecha introducida no es anterior a la actual.");
        }
        
        /// <summary>
        /// Filtrado cliente con DNI 12345678K
        /// </summary>
        public void FilterClientByDNIMethod()
        {
            #region Variable Declarations
            HtmlEdit uINIFEdit = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument.UINIFEdit;
            HtmlInputButton uIFilterButton = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument.UIFilterButton;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir '12345678K' en cuadro de texto 'NIF'
            Playback.Wait(1000);
            uINIFEdit.Text = this.FilterClientByDNIMethodParams.UINIFEditText;

            // Clic 'Filter' botón
            Mouse.Click(uIFilterButton, new Point(24, 11));
        }
        
        /// <summary>
        /// Filtrados clientes con un DNI no encontrado.
        /// </summary>
        public void FilterClientNotFoundMethod()
        {
            #region Variable Declarations
            HtmlEdit uINIFEdit = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument.UINIFEdit;
            HtmlInputButton uIFilterButton = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument.UIFilterButton;
            #endregion

            // Escribir '5651' en cuadro de texto 'NIF'
            uINIFEdit.Text = this.FilterClientNotFoundMethodParams.UINIFEditText;

            // Clic 'Filter' botón
            Mouse.Click(uIFilterButton, new Point(30, 5));
        }
        
        /// <summary>
        /// Comprueba que se muestra el error por fechas inicio fin intercambiadas
        /// </summary>
        public void FinMenorEqInicioAssert()
        {
            #region Variable Declarations
            HtmlCustom uIOopsposiblementehacoCustom = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIOopsposiblementehacoCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Oops, posiblemente ha confundido la Fech' control personalizado es igual a 'Oops, posiblemente ha confundido la Fecha de Inicio con la Fecha de Fin'
            Assert.AreEqual(this.FinMenorEqInicioAssertExpectedValues.UIOopsposiblementehacoCustomInnerText, uIOopsposiblementehacoCustom.InnerText, "Fecha inicio no es superior o igual a la de fin.");
        }
        
        /// <summary>
        /// Comprueba que el formulario de seleccion de habitaciones y descuentos cuenta con los campos mencionados en el CU.
        /// </summary>
        public void FormularioDescHabitacionesAssert()
        {
            #region Variable Declarations
            HtmlRadioButton uIDescuentoSeleccionadRadioButton = this.UIIndiceClienteTeamCatWindow1.UINuevaReservaDatosResDocument.UIDescuentoSeleccionadRadioButton;
            HtmlCheckBox uIHabitacionesSeleccioCheckBox = this.UIIndiceClienteTeamCatWindow1.UINuevaReservaDatosResDocument.UIHabitacionesSeleccioCheckBox;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'descuentoSeleccionado' botón de radio es igual a 'descuentoSeleccionado'
            Playback.Wait(5000);
            Assert.AreEqual(this.FormularioDescHabitacionesAssertExpectedValues.UIDescuentoSeleccionadRadioButtonName, uIDescuentoSeleccionadRadioButton.Name, "No hay descuentos que seleccionar");

            // Compruebe que la propiedad 'Name' de 'habitacionesSeleccionadas' casilla es igual a 'habitacionesSeleccionadas'
            Assert.AreEqual(this.FormularioDescHabitacionesAssertExpectedValues.UIHabitacionesSeleccioCheckBoxName, uIHabitacionesSeleccioCheckBox.Name, "No hay habitaciones que seleccionar");
        }
        
        /// <summary>
        /// Comprobación de que el formulario de hacer reserva tiene todos los campos indicados.
        /// </summary>
        public void FormularioReservaAssert()
        {
            #region Variable Declarations
            HtmlEdit uIFechaInicioEdit1 = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIFechaInicioEdit1;
            HtmlEdit uIFechaFinEdit1 = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIFechaFinEdit1;
            HtmlComboBox uIRegimendecomidasComboBox1 = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIRegimendecomidasComboBox1;
            HtmlEdit uIComentariosobrelaresEdit1 = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIComentariosobrelaresEdit1;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'Fecha Inicio:' cuadro de texto es igual a 'fechaInicio'
            Playback.Wait(5000);
            Assert.AreEqual(this.FormularioReservaAssertExpectedValues.UIFechaInicioEdit1Name, uIFechaInicioEdit1.Name, "No hay un control para introducir fechaInicio");

            // Compruebe que la propiedad 'Name' de 'Fecha Fin:' cuadro de texto es igual a 'fechaFin'
            Assert.AreEqual(this.FormularioReservaAssertExpectedValues.UIFechaFinEdit1Name, uIFechaFinEdit1.Name, "No hay un control para introducir fechaFin");

            // Compruebe que la propiedad 'Name' de 'Regimen de comidas:' cuadro combinado es igual a 'regimenComida'
            Assert.AreEqual(this.FormularioReservaAssertExpectedValues.UIRegimendecomidasComboBox1Name, uIRegimendecomidasComboBox1.Name, "No hay un control para introducir regimenComida");

            // Compruebe que la propiedad 'Name' de 'Comentario sobre la reserva:' cuadro de texto es igual a 'comentarios'
            Assert.AreEqual(this.FormularioReservaAssertExpectedValues.UIComentariosobrelaresEdit1Name, uIComentariosobrelaresEdit1.Name, "No hay un control para introducir comentarios");
        }
        
        /// <summary>
        /// Guardar una reserva sin haber seleccionado habitación.
        /// </summary>
        public void GuardarReservaSinHabitacionMethod()
        {
            #region Variable Declarations
            HtmlButton uIGuardarReservaButton = this.UINuevaReservaDatosResWindow1.UINuevaReservaDatosResDocument.UIGuardarReservaButton;
            #endregion

            // Clic 'Guardar Reserva' botón
            Mouse.Click(uIGuardarReservaButton, new Point(23, 6));
        }
        
        /// <summary>
        /// Entrada a vista Hacer Reserva a partir de cliente.
        /// </summary>
        public void HacerReservaClienteMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uIHacerReservaHyperlink = this.UIDetailsTeamCatHotelIWindow.UIDetailsTeamCatHotelDocument.UIHacerReservaHyperlink;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Clic 'Hacer Reserva' vínculo
            Playback.Wait(1000);
            Mouse.Click(uIHacerReservaHyperlink, new Point(40, 4));
        }
        
        /// <summary>
        /// Inicia Internet Explorer y te lleva a la WebApp desarrollada
        /// </summary>
        public void IniciarIEyWebApp()
        {
            #region Variable Declarations
            HtmlDiv uISb_ifc0Pane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UISb_ifc0Pane;
            HtmlDiv uIGoogleInstantnoestádPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIFCustom.UIGoogleInstantnoestádPane;
            BrowserWindow uIGoogleInternetExplorWindow = this.UIGoogleInternetExplorWindow;
            #endregion

            // Ir a página web 'http://google.es/' mediante nueva instancia de explorador
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.IniciarIEyWebAppParams.UIGoogleInternetExplorWindowUrl));

            // Establezca la marca para permitir que la reproducción continúe si no hay errores en ninguna acción esencial. (Por ejemplo, si el error es en una acción de mantener el mouse.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mantener el mouse sobre panel 'sb_ifc0' en (1, 1)
            Mouse.Hover(uISb_ifc0Pane, new Point(1, 1));

            // Mantener el mouse sobre panel 'Google Instant no está disponible. Pulsa' en (1, 1)
            Mouse.Hover(uIGoogleInstantnoestádPane, new Point(1, 1));

            // Restablezca la marca para asegurarse de que la reproducción se detenga si hay un error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Ir a página web 'http://localhost:21013/'
            uIGoogleInternetExplorWindow.NavigateToUrl(new System.Uri(this.IniciarIEyWebAppParams.UIGoogleInternetExplorWindowUrl1));
        }
        
        /// <summary>
        /// Acceso a Internet Explorer a la dirección de la web [ http://localhost:21013/ ]
        /// </summary>
        public void InicioInternetExplorer()
        {

            // Ir a página web 'http://localhost:21013/' mediante nueva instancia de explorador
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.InicioInternetExplorerParams.UIGoogleInternetExplorWindowUrl));
        }
        
        /// <summary>
        /// Inicio de sesion del camarero en el sistema.
        ///Home -> Contratar Menu(Sin Login) -> Login -> Contratar Menu(Con Login)
        /// </summary>
        public void InicioSesionCamarero()
        {
            #region Variable Declarations
            HtmlHyperlink uIContratarMenuHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UIContratarMenuHyperlink;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument.UILoginButton;
            #endregion

            // Clic 'Contratar Menu' vínculo
            Mouse.Click(uIContratarMenuHyperlink, new Point(73, 32));

            // Escribir 'camarero@hotel.fbk' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.InicioSesionCamareroParams.UIEmailEditText;

            // Escribir '{Tab}' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.InicioSesionCamareroParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.InicioSesionCamareroParams.UIPasswordEditPassword;

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(37, 6));
        }
        
        /// <summary>
        /// Inicia sesion como encargado del almacen
        /// </summary>
        public void InicioSesionEAlmacen()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UILoginHyperlink;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UILoginButton;
            #endregion

            // Clic 'Log in' vínculo
            Mouse.Click(uILoginHyperlink, new Point(38, 31));

            // Escribir 'ealmacen@hotel.fbk' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.InicioSesionEAlmacenParams.UIEmailEditText;

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.InicioSesionEAlmacenParams.UIPasswordEditPassword;

            // Escribir '********' en cuadro de texto 'Password'
            Keyboard.SendKeys(uIPasswordEdit, this.InicioSesionEAlmacenParams.UIPasswordEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control), true);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.InicioSesionEAlmacenParams.UIPasswordEditPassword1;

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(35, 13));
        }
        
        /// <summary>
        /// Se introduce una cantidad mayor que cien para los productos
        /// </summary>
        public void IntroducirCantidadProductosMayorCien()
        {
            #region Variable Declarations
            HtmlEdit uIListaCantidadesEdit = this.UISeleccionarProductosWindow1.UISeleccionarProductosDocument.UIListaCantidadesEdit;
            #endregion

            // Escribir '101' en cuadro de texto 'listaCantidades'
            uIListaCantidadesEdit.Text = this.IntroducirCantidadProductosMayorCienParams.UIListaCantidadesEditText;
        }
        
        /// <summary>
        /// Se introducen las cantidades deseadas para el proveedor, dentro de los valores correctos
        /// </summary>
        public void IntroducirCantidadProductosNormal()
        {
            #region Variable Declarations
            HtmlEdit uIListaCantidadesEdit = this.UISeleccionarProductosWindow.UISeleccionarProductosDocument.UIListaCantidadesEdit;
            #endregion

            // Escribir '1' en cuadro de texto 'listaCantidades'
            uIListaCantidadesEdit.Text = this.IntroducirCantidadProductosNormalParams.UIListaCantidadesEditText;
        }
        
        /// <summary>
        /// Introducir datos reserva en la vista correspondiente.
        /// </summary>
        public void IntroducirDatosReservaMethod()
        {
            #region Variable Declarations
            HtmlEdit uIFechaInicioEdit = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIFechaInicioEdit;
            HtmlEdit uIFechaFinEdit = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIFechaFinEdit;
            HtmlComboBox uIRegimendecomidasComboBox = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIRegimendecomidasComboBox;
            HtmlEdit uIComentariosobrelaresEdit = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIComentariosobrelaresEdit;
            HtmlInputButton uIContinuarButton = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIContinuarButton;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir '2016-12-17' en cuadro de texto 'Fecha Inicio:'
            Playback.Wait(1000);
            uIFechaInicioEdit.Text = this.IntroducirDatosReservaMethodParams.UIFechaInicioEditText;

            // Escribir '2016-12-18' en cuadro de texto 'Fecha Fin:'
            uIFechaFinEdit.Text = this.IntroducirDatosReservaMethodParams.UIFechaFinEditText;

            // Seleccionar 'Media Pension' en cuadro combinado 'Regimen de comidas:'
            uIRegimendecomidasComboBox.SelectedItem = this.IntroducirDatosReservaMethodParams.UIRegimendecomidasComboBoxSelectedItem;

            // Escribir 'Yeeee' en cuadro de texto 'Comentario sobre la reserva:'
            uIComentariosobrelaresEdit.Text = this.IntroducirDatosReservaMethodParams.UIComentariosobrelaresEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(26, 15));
        }
        
        /// <summary>
        /// Comprueba si se está en el listado de clientes.
        /// </summary>
        public void ListaClienteAssert()
        {
            #region Variable Declarations
            WinTabPage uIIndiceClienteTeamCatTabPage = this.UIIndiceClienteTeamCatWindow.UIFiladepestañasTabList.UIIndiceClienteTeamCatTabPage;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'Indice Cliente - TeamCatHotel' pestaña es igual a 'Indice Cliente - TeamCatHotel'
            Playback.Wait(5000);
            Assert.AreEqual(this.ListaClienteAssertExpectedValues.UIIndiceClienteTeamCatTabPageName, uIIndiceClienteTeamCatTabPage.Name, "No se ha vuelto al índice");
        }
        
        /// <summary>
        /// LogInRecepcionista
        /// </summary>
        public void LogInRecepcionista()
        {
            #region Variable Declarations
            HtmlHyperlink uIHabitacionesHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UIHabitacionesHyperlink;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UIItemCustom;
            WinCustom uIItemCustom1 = this.UIItemWindow.UIItemCustom;
            #endregion

            // Clic 'Habitaciones' vínculo
            Mouse.Click(uIHabitacionesHyperlink, new Point(50, 29));

            // Clic control personalizado
            Mouse.Click(uIItemCustom, new Point(569, 286));

            // Clic control personalizado
            Mouse.Click(uIItemCustom1, new Point(1919, 0));
        }
        
        /// <summary>
        /// Método de log in del recepcionista
        /// </summary>
        public void LogInRecepcionistaMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UILoginHyperlink;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UILoginButton;
            #endregion

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Clic 'Log in' vínculo
            Playback.Wait(5000);
            Mouse.Click(uILoginHyperlink, new Point(37, 31));

            // Esperar durante 5 segundos al retraso del usuario entre acciones; Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
            Playback.Wait(5000);
            uIEmailEdit.Text = this.LogInRecepcionistaMethodParams.UIEmailEditText;

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.LogInRecepcionistaMethodParams.UIPasswordEditPassword;

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(46, 28));
        }
        
        /// <summary>
        /// Comprueba que no se hayan encontrado clientes al filtrar por DNI.
        /// </summary>
        public void NoClientsFoundFilterAssert()
        {
            #region Variable Declarations
            HtmlDiv uIIndiceCrearNuevoNIFPane = this.UIIndiceClienteTeamCatWindow3.UIIndiceClienteTeamCatDocument.UIIndiceCrearNuevoNIFPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Indice Crear Nuevo NIF:' panel es igual a 'Indice
            //
            //Crear Nuevo 
            //
            //
            //NIF:   
            //
            //
            //apellidos 
            //
            //codigoPostal 
            //
            //correoElectronico 
            //
            //direccion 
            //
            //localidad 
            //
            //nif 
            //
            //nombre 
            //
            //pais 
            //
            //provincia 
            //
            //telefono 
            //
            //numeroTarjeta 
            //
            //
            //
            //
            //
            //
            //
            //© 2016 - TeamCatHotel'
            Assert.AreEqual(this.NoClientsFoundFilterAssertExpectedValues.UIIndiceCrearNuevoNIFPaneInnerText, uIIndiceCrearNuevoNIFPane.InnerText, "Se ha encontrado algun cliente.");
        }
        
        /// <summary>
        /// Comprueba que se muestra el error si no encuentra habitacion.
        /// </summary>
        public void NoHayHabitacionReservaAssert()
        {
            #region Variable Declarations
            HtmlCustom uINohayhabitacionesdisCustom = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UINohayhabitacionesdisCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No hay habitaciones disponibles con las' control personalizado es igual a 'No hay habitaciones disponibles con las fechas dadas'
            Assert.AreEqual(this.NoHayHabitacionReservaAssertExpectedValues.UINohayhabitacionesdisCustomInnerText, uINohayhabitacionesdisCustom.InnerText, "Hay una habitacion disponible");
        }
        
        /// <summary>
        /// Se realiza el pedido correctamente
        /// </summary>
        public void PedidoRealizado()
        {
            #region Variable Declarations
            HtmlButton uIRealizarpedidoButton = this.UIConfirmarPedidoTeamCWindow.UIConfirmarPedidoTeamCDocument.UIRealizarpedidoButton;
            #endregion

            // Clic 'Realizar pedido' botón
            Mouse.Click(uIRealizarpedidoButton, new Point(33, 11));
        }
        
        /// <summary>
        /// RealizaLoginRecepcionista: use 'RealizaLoginRecepcionistaParams' para pasar parámetros a este método.
        /// </summary>
        public void RealizaLoginRecepcionista()
        {
            #region Variable Declarations
            HtmlEdit uIEmailEdit1 = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIEmailEdit1;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIPasswordEdit;
            #endregion

            // Escribir 'recepcionista' en cuadro de texto 'Email'
            uIEmailEdit1.Text = this.RealizaLoginRecepcionistaParams.UIEmailEdit1Text;

            // Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit1, this.RealizaLoginRecepcionistaParams.UIEmailEdit1SendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
            uIEmailEdit1.Text = this.RealizaLoginRecepcionistaParams.UIEmailEdit1Text1;

            // Escribir '{Tab}' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit1, this.RealizaLoginRecepcionistaParams.UIEmailEdit1SendKeys1, ModifierKeys.None);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.RealizaLoginRecepcionistaParams.UIPasswordEditPassword;

            // Escribir '********' en cuadro de texto 'Password'
            Keyboard.SendKeys(uIPasswordEdit, this.RealizaLoginRecepcionistaParams.UIPasswordEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control), true);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.RealizaLoginRecepcionistaParams.UIPasswordEditPassword1;
        }
        
        /// <summary>
        /// RealizarLoginRecepcionista: use 'RealizarLoginRecepcionistaParams' para pasar parámetros a este método.
        /// </summary>
        /// 
        public void RealizarLoginRecepcionista()
        {
            #region Variable Declarations
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument1.UILoginButton;
            #endregion

            // Escribir 'recepcionista' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.RealizarLoginRecepcionistaParams.UIEmailEditText;

            // Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.RealizarLoginRecepcionistaParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.RealizarLoginRecepcionistaParams.UIEmailEditText1;

            // Escribir '{Tab}' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.RealizarLoginRecepcionistaParams.UIEmailEditSendKeys1, ModifierKeys.None);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.RealizarLoginRecepcionistaParams.UIPasswordEditPassword;

            // Escribir '********' en cuadro de texto 'Password'
            Keyboard.SendKeys(uIPasswordEdit, this.RealizarLoginRecepcionistaParams.UIPasswordEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control), true);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.RealizarLoginRecepcionistaParams.UIPasswordEditPassword1;

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(42, 20));
        }
        
        /// <summary>
        /// RealizarLogOut
        /// </summary>
        public void RealizarLogOut()
        {
            #region Variable Declarations
            HtmlButton uILogoffButton = this.UIDetailsTeamCatHotelIWindow1.UIListaserviciosTeamCaDocument.UILogoutFormCustom.UILogoffButton;
            #endregion

            // Clic 'Log off' botón
            Mouse.Click(uILogoffButton, new Point(36, 10));
        }
        
        /// <summary>
        /// Hacer click a continuar sin haber rellenado nada.
        /// </summary>
        public void ReservaContinuarSinRellenarMethod()
        {
            #region Variable Declarations
            HtmlInputButton uIContinuarButton = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument.UIContinuarButton;
            #endregion

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(30, 11));
        }
        
        /// <summary>
        /// Revisa que muestra el error de la cantidad menor que cero
        /// </summary>
        public void RevisarErrorMenorCero()
        {
            #region Variable Declarations
            HtmlCustom uIErrorLacantidadnopueCustom = this.UISeleccionarProductosWindow1.UISeleccionarProductosDocument.UIErrorLacantidadnopueCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Error. La cantidad no puede ser menor qu' control personalizado es igual a 'Error. La cantidad no puede ser menor que 0.'
            Assert.AreEqual(this.RevisarErrorMenorCeroExpectedValues.UIErrorLacantidadnopueCustomInnerText, uIErrorLacantidadnopueCustom.InnerText, "No es el error de menor que cero");
        }
        
        /// <summary>
        /// Se selecciona hacer pedido en las pestañas de arriba
        /// </summary>
        public void SeleccionarHacerPedido()
        {
            #region Variable Declarations
            HtmlHyperlink uIHacerPedidoHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageTeamCatHotelDocument.UIHacerPedidoHyperlink;
            #endregion

            // Clic 'Hacer Pedido' vínculo
            Mouse.Click(uIHacerPedidoHyperlink, new Point(41, 29));
        }
        
        /// <summary>
        /// Dar clic al boton seleccionar productos
        /// </summary>
        public void SeleccionarProductosSinProductos()
        {
            #region Variable Declarations
            HtmlButton uISeleccionarProductosButton = this.UISeleccionarProveedorWindow.UISeleccionarProveedorDocument.UISeleccionarProductosButton;
            #endregion

            // Clic 'Seleccionar Productos' botón
            Mouse.Click(uISeleccionarProductosButton, new Point(40, 20));
        }
        
        /// <summary>
        /// Selecciona un proveedor sin productos
        /// </summary>
        public void SeleccionarProveedorFranciscoSLSinProd()
        {
            #region Variable Declarations
            HtmlComboBox uIIdProveedorComboBox1 = this.UISeleccionarProveedorWindow.UISeleccionarProveedorDocument.UIIdProveedorComboBox1;
            #endregion

            // Seleccionar 'FranciscoSL' en cuadro combinado 'idProveedor'
            uIIdProveedorComboBox1.SelectedItem = this.SeleccionarProveedorFranciscoSLSinProdParams.UIIdProveedorComboBox1SelectedItem;
        }
        
        /// <summary>
        /// Se selecciona el proveedor PedroSL ya que dispone de productos.
        /// </summary>
        public void SeleccionarProveedorPedroSL()
        {
            #region Variable Declarations
            HtmlButton uISeleccionarProductosButton = this.UISeleccionarProveedorWindow.UISeleccionarProveedorDocument.UISeleccionarProductosButton;
            #endregion

            // Clic 'Seleccionar Productos' botón
            Mouse.Click(uISeleccionarProductosButton, new Point(97, 14));
        }
        
        /// <summary>
        /// SeleccionarSaunaComoServicio
        /// </summary>
        public void SeleccionarSaunaComoServicio()
        {
            #region Variable Declarations
            HtmlInputButton uISeleccionarServicioButton = this.UIDetailsTeamCatHotelIWindow1.UIListaserviciosTeamCaDocument.UISeleccionarServicioButton;
            #endregion

            // Clic 'Seleccionar Servicio' botón
            Mouse.Click(uISeleccionarServicioButton, new Point(109, 21));
        }
        
        /// <summary>
        /// Seleccion de Habitacion y Descuento en la reserva
        /// </summary>
        public void SeleccionHabitacionDescMethod()
        {
            #region Variable Declarations
            HtmlRadioButton uIDescuentoSeleccionadRadioButton = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument1.UIDescuentoSeleccionadRadioButton;
            HtmlCheckBox uIHabitacionesSeleccioCheckBox = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument1.UIHabitacionesSeleccioCheckBox;
            HtmlButton uIGuardarReservaButton = this.UINuevaReservaDatosResWindow.UINuevaReservaDatosResDocument1.UIGuardarReservaButton;
            #endregion

            // Seleccionar botón de radio 'descuentoSeleccionado'
            uIDescuentoSeleccionadRadioButton.Selected = this.SeleccionHabitacionDescMethodParams.UIDescuentoSeleccionadRadioButtonSelected;

            // Seleccionar casilla 'habitacionesSeleccionadas'
            uIHabitacionesSeleccioCheckBox.Checked = this.SeleccionHabitacionDescMethodParams.UIHabitacionesSeleccioCheckBoxChecked;

            // Clic 'Guardar Reserva' botón
            Mouse.Click(uIGuardarReservaButton, new Point(75, 12));
        }
        
        /// <summary>
        /// SolicitarServicioHabitacionNoOcupada
        /// </summary>
        public void SolicitarServicioHabitacionNoOcupada()
        {
            #region Variable Declarations
            HtmlHyperlink uISolicitarServicioHyperlink = this.UIDetailsTeamCatHotelIWindow2.UIDetailsTeamCatHotelDocument.UISolicitarServicioHyperlink;
            #endregion

            // Clic 'Solicitar Servicio' vínculo
            Mouse.Click(uISolicitarServicioHyperlink, new Point(44, 6));
        }
        
        /// <summary>
        /// validamos el log-in del recepcionista
        /// </summary>
        public void ValidarLogInRecepcionista()
        {
            #region Variable Declarations
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow.UILoginTeamCatHotelDocument2.UILoginButton;
            #endregion

            // Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
            Assert.AreEqual(this.ValidarLogInRecepcionistaExpectedValues.UILoginButtonDisplayText, uILoginButton.DisplayText, "Log in");
        }
        
        /// <summary>
        /// validacion
        /// </summary>
        public void ValidarLogInRecepcionistaHotel()
        {
            #region Variable Declarations
            HtmlButton uILoginButton = this.UILoginTeamCatHotelIntWindow.UILoginTeamCatHotelDocument.UILoginButton;
            #endregion

            // Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
            Assert.AreEqual(this.ValidarLogInRecepcionistaHotelExpectedValues.UILoginButtonDisplayText, uILoginButton.DisplayText, "log");
        }
        
        /// <summary>
        /// VerificarHabicaionNoOcupada: use 'VerificarHabicaionNoOcupadaExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void VerificarHabicaionNoOcupada()
        {
            #region Variable Declarations
            HtmlCheckBox uIItemCheckBox = this.UIDetailsTeamCatHotelIWindow2.UIDetailsTeamCatHotelDocument.UIItemCheckBox;
            #endregion

            // Compruebe que la propiedad 'Checked' de casilla es igual a 'False'
            Assert.AreEqual(this.VerificarHabicaionNoOcupadaExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        /// <summary>
        /// VerificarTabHabitaciones: use 'VerificarTabHabitacionesExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void VerificarTabHabitaciones()
        {
            #region Variable Declarations
            HtmlHyperlink uIHabitacionesHyperlink = this.UIIndexTeamCatHotelIntWindow.UIIndexTeamCatHotelDocument.UIHabitacionesHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Habitaciones' vínculo es igual a 'Habitaciones'
            Assert.AreEqual(this.VerificarTabHabitacionesExpectedValues.UIHabitacionesHyperlinkInnerText, uIHabitacionesHyperlink.InnerText);
        }
        
        /// <summary>
        /// VerificarUrlListado: use 'VerificarUrlListadoExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void VerificarUrlListado()
        {
            #region Variable Declarations
            WinEdit uIDirecciónEdit = this.UIGoogleInternetExplorWindow.UIItemWindow.UIBarradedireccionesClient.UIDirecciónEdit;
            #endregion

            // Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto contiene '/Habitacions'
            StringAssert.Contains(uIDirecciónEdit.Text, this.VerificarUrlListadoExpectedValues.UIDirecciónEditText);
        }
        
        /// <summary>
        /// Se le da a ver resumen habiendo introduciendo una cantidad mayor que cien
        /// </summary>
        public void VerResumenMayorCien()
        {
            #region Variable Declarations
            HtmlButton uIVerresumenButton = this.UISeleccionarProductosWindow1.UISeleccionarProductosDocument.UIVerresumenButton;
            #endregion

            // Clic 'Ver resumen' botón
            Mouse.Click(uIVerresumenButton, new Point(15, 20));
            // se replica
            Mouse.Click(uIVerresumenButton, new Point(15, 20));
        }
        
        /// <summary>
        /// Se le da clic a ver resumen introduciendo una cantidad negativa
        /// </summary>
        public void VerResumenNegativo()
        {
            #region Variable Declarations
            HtmlButton uIVerresumenButton = this.UISeleccionarProductosWindow.UISeleccionarProductosDocument.UIVerresumenButton;
            #endregion

            // Clic 'Ver resumen' botón
            Mouse.Click(uIVerresumenButton, new Point(65, 20));
            // se replica
            Mouse.Click(uIVerresumenButton, new Point(65, 20));
        }
        
        /// <summary>
        /// Se hace clic sobre resumen para ver el resumen del pedido
        /// </summary>
        public void VerResumenPedido()
        {
            #region Variable Declarations
            HtmlButton uIVerresumenButton = this.UISeleccionarProductosWindow.UISeleccionarProductosDocument.UIVerresumenButton;
            #endregion

            // Clic 'Ver resumen' botón
            Mouse.Click(uIVerresumenButton, new Point(66, 20));
            // se replica
            Mouse.Click(uIVerresumenButton, new Point(66, 20));
        }
        
        /// <summary>
        /// Ver detalles del cliente
        /// </summary>
        public void ViewClientDetailsMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIIndiceClienteTeamCatWindow.UIIndiceClienteTeamCatDocument1.UIDetailsHyperlink;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Clic 'Details' vínculo
            Playback.Wait(1000);
            Mouse.Click(uIDetailsHyperlink, new Point(35, 10));
        }
        
        #region Properties
        public virtual AbrirInternetExplorerParams AbrirInternetExplorerParams
        {
            get
            {
                if ((this.mAbrirInternetExplorerParams == null))
                {
                    this.mAbrirInternetExplorerParams = new AbrirInternetExplorerParams();
                }
                return this.mAbrirInternetExplorerParams;
            }
        }
        
        public virtual AssertExisteSaunaParaSeleccionarExpectedValues AssertExisteSaunaParaSeleccionarExpectedValues
        {
            get
            {
                if ((this.mAssertExisteSaunaParaSeleccionarExpectedValues == null))
                {
                    this.mAssertExisteSaunaParaSeleccionarExpectedValues = new AssertExisteSaunaParaSeleccionarExpectedValues();
                }
                return this.mAssertExisteSaunaParaSeleccionarExpectedValues;
            }
        }
        
        public virtual AssertHabitacionOcupadaExpectedValues AssertHabitacionOcupadaExpectedValues
        {
            get
            {
                if ((this.mAssertHabitacionOcupadaExpectedValues == null))
                {
                    this.mAssertHabitacionOcupadaExpectedValues = new AssertHabitacionOcupadaExpectedValues();
                }
                return this.mAssertHabitacionOcupadaExpectedValues;
            }
        }
        
        public virtual AssertLogInShownExpectedValues AssertLogInShownExpectedValues
        {
            get
            {
                if ((this.mAssertLogInShownExpectedValues == null))
                {
                    this.mAssertLogInShownExpectedValues = new AssertLogInShownExpectedValues();
                }
                return this.mAssertLogInShownExpectedValues;
            }
        }
        
        public virtual AssertVerificarLoginRecepcionistaExpectedValues AssertVerificarLoginRecepcionistaExpectedValues
        {
            get
            {
                if ((this.mAssertVerificarLoginRecepcionistaExpectedValues == null))
                {
                    this.mAssertVerificarLoginRecepcionistaExpectedValues = new AssertVerificarLoginRecepcionistaExpectedValues();
                }
                return this.mAssertVerificarLoginRecepcionistaExpectedValues;
            }
        }
        
        public virtual AssertVolverListadoHabitacionesExpectedValues AssertVolverListadoHabitacionesExpectedValues
        {
            get
            {
                if ((this.mAssertVolverListadoHabitacionesExpectedValues == null))
                {
                    this.mAssertVolverListadoHabitacionesExpectedValues = new AssertVolverListadoHabitacionesExpectedValues();
                }
                return this.mAssertVolverListadoHabitacionesExpectedValues;
            }
        }
        
        public virtual AssertVueltaMenuMsgNoOcupadaExpectedValues AssertVueltaMenuMsgNoOcupadaExpectedValues
        {
            get
            {
                if ((this.mAssertVueltaMenuMsgNoOcupadaExpectedValues == null))
                {
                    this.mAssertVueltaMenuMsgNoOcupadaExpectedValues = new AssertVueltaMenuMsgNoOcupadaExpectedValues();
                }
                return this.mAssertVueltaMenuMsgNoOcupadaExpectedValues;
            }
        }
        
        
        #region Properties
        public virtual ClienteDNIEncontradoAssertExpectedValues ClienteDNIEncontradoAssertExpectedValues
        {
            get
            {
                if ((this.mClienteDNIEncontradoAssertExpectedValues == null))
                {
                    this.mClienteDNIEncontradoAssertExpectedValues = new ClienteDNIEncontradoAssertExpectedValues();
                }
                return this.mClienteDNIEncontradoAssertExpectedValues;
            }
        }
        
        public virtual ComprobacionInicioSesionCamareroExpectedValues ComprobacionInicioSesionCamareroExpectedValues
        {
            get
            {
                if ((this.mComprobacionInicioSesionCamareroExpectedValues == null))
                {
                    this.mComprobacionInicioSesionCamareroExpectedValues = new ComprobacionInicioSesionCamareroExpectedValues();
                }
                return this.mComprobacionInicioSesionCamareroExpectedValues;
            }
        }
        
        public virtual ComprobacionMensajeCorrectoContratacionMenuExpectedValues ComprobacionMensajeCorrectoContratacionMenuExpectedValues
        {
            get
            {
                if ((this.mComprobacionMensajeCorrectoContratacionMenuExpectedValues == null))
                {
                    this.mComprobacionMensajeCorrectoContratacionMenuExpectedValues = new ComprobacionMensajeCorrectoContratacionMenuExpectedValues();
                }
                return this.mComprobacionMensajeCorrectoContratacionMenuExpectedValues;
            }
        }
        
        public virtual ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues
        {
            get
            {
                if ((this.mComprobacionMensajeErrorFueraDeHoraMenuExpectedValues == null))
                {
                    this.mComprobacionMensajeErrorFueraDeHoraMenuExpectedValues = new ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues();
                }
                return this.mComprobacionMensajeErrorFueraDeHoraMenuExpectedValues;
            }
        }
        
        public virtual ComprobacionMensajeErrorReservaNoEncontradaExpectedValues ComprobacionMensajeErrorReservaNoEncontradaExpectedValues
        {
            get
            {
                if ((this.mComprobacionMensajeErrorReservaNoEncontradaExpectedValues == null))
                {
                    this.mComprobacionMensajeErrorReservaNoEncontradaExpectedValues = new ComprobacionMensajeErrorReservaNoEncontradaExpectedValues();
                }
                return this.mComprobacionMensajeErrorReservaNoEncontradaExpectedValues;
            }
        }
        
        public virtual ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues
        {
            get
            {
                if ((this.mComprobacionMensajeInformacionAntesDeConfirmarExpectedValues == null))
                {
                    this.mComprobacionMensajeInformacionAntesDeConfirmarExpectedValues = new ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues();
                }
                return this.mComprobacionMensajeInformacionAntesDeConfirmarExpectedValues;
            }
        }
        
        public virtual ComprobacionTextBoxNumHabitacionVacioExpectedValues ComprobacionTextBoxNumHabitacionVacioExpectedValues
        {
            get
            {
                if ((this.mComprobacionTextBoxNumHabitacionVacioExpectedValues == null))
                {
                    this.mComprobacionTextBoxNumHabitacionVacioExpectedValues = new ComprobacionTextBoxNumHabitacionVacioExpectedValues();
                }
                return this.mComprobacionTextBoxNumHabitacionVacioExpectedValues;
            }
        }
        
        public virtual ComprobacionWebContratarMenuExpectedValues ComprobacionWebContratarMenuExpectedValues
        {
            get
            {
                if ((this.mComprobacionWebContratarMenuExpectedValues == null))
                {
                    this.mComprobacionWebContratarMenuExpectedValues = new ComprobacionWebContratarMenuExpectedValues();
                }
                return this.mComprobacionWebContratarMenuExpectedValues;
            }
        }
        
        public virtual ComprobarComboBoxProveedoresExpectedValues ComprobarComboBoxProveedoresExpectedValues
        {
            get
            {
                if ((this.mComprobarComboBoxProveedoresExpectedValues == null))
                {
                    this.mComprobarComboBoxProveedoresExpectedValues = new ComprobarComboBoxProveedoresExpectedValues();
                }
                return this.mComprobarComboBoxProveedoresExpectedValues;
            }
        }
        
        public virtual ComprobarErrorMayorCienExpectedValues ComprobarErrorMayorCienExpectedValues
        {
            get
            {
                if ((this.mComprobarErrorMayorCienExpectedValues == null))
                {
                    this.mComprobarErrorMayorCienExpectedValues = new ComprobarErrorMayorCienExpectedValues();
                }
                return this.mComprobarErrorMayorCienExpectedValues;
            }
        }
        
        public virtual ComprobarInicioSesionEAlmacenExpectedValues ComprobarInicioSesionEAlmacenExpectedValues
        {
            get
            {
                if ((this.mComprobarInicioSesionEAlmacenExpectedValues == null))
                {
                    this.mComprobarInicioSesionEAlmacenExpectedValues = new ComprobarInicioSesionEAlmacenExpectedValues();
                }
                return this.mComprobarInicioSesionEAlmacenExpectedValues;
            }
        }
        
        public virtual ComprobarResumenPedidoExpectedValues ComprobarResumenPedidoExpectedValues
        {
            get
            {
                if ((this.mComprobarResumenPedidoExpectedValues == null))
                {
                    this.mComprobarResumenPedidoExpectedValues = new ComprobarResumenPedidoExpectedValues();
                }
                return this.mComprobarResumenPedidoExpectedValues;
            }
        }
        
        public virtual ConfimarServicioSaunaParams ConfimarServicioSaunaParams
        {
            get
            {
                if ((this.mConfimarServicioSaunaParams == null))
                {
                    this.mConfimarServicioSaunaParams = new ConfimarServicioSaunaParams();
                }
                return this.mConfimarServicioSaunaParams;
            }
        }
        
        public virtual ContratarMenuAntesDeConfirmarParams ContratarMenuAntesDeConfirmarParams
        {
            get
            {
                if ((this.mContratarMenuAntesDeConfirmarParams == null))
                {
                    this.mContratarMenuAntesDeConfirmarParams = new ContratarMenuAntesDeConfirmarParams();
                }
                return this.mContratarMenuAntesDeConfirmarParams;
            }
        }
        
        public virtual ContratarMenuCancelarNumeroComensalesParams ContratarMenuCancelarNumeroComensalesParams
        {
            get
            {
                if ((this.mContratarMenuCancelarNumeroComensalesParams == null))
                {
                    this.mContratarMenuCancelarNumeroComensalesParams = new ContratarMenuCancelarNumeroComensalesParams();
                }
                return this.mContratarMenuCancelarNumeroComensalesParams;
            }
        }
        
        public virtual ContratarMenuCancelarPrimerContratarParams ContratarMenuCancelarPrimerContratarParams
        {
            get
            {
                if ((this.mContratarMenuCancelarPrimerContratarParams == null))
                {
                    this.mContratarMenuCancelarPrimerContratarParams = new ContratarMenuCancelarPrimerContratarParams();
                }
                return this.mContratarMenuCancelarPrimerContratarParams;
            }
        }
        
        public virtual ContratarMenuConExitoParams ContratarMenuConExitoParams
        {
            get
            {
                if ((this.mContratarMenuConExitoParams == null))
                {
                    this.mContratarMenuConExitoParams = new ContratarMenuConExitoParams();
                }
                return this.mContratarMenuConExitoParams;
            }
        }
        
        public virtual ContratarMenuConReservaNoValidaParams ContratarMenuConReservaNoValidaParams
        {
            get
            {
                if ((this.mContratarMenuConReservaNoValidaParams == null))
                {
                    this.mContratarMenuConReservaNoValidaParams = new ContratarMenuConReservaNoValidaParams();
                }
                return this.mContratarMenuConReservaNoValidaParams;
            }
        }
        
        public virtual ContratarMenuFueraDeHoraParams ContratarMenuFueraDeHoraParams
        {
            get
            {
                if ((this.mContratarMenuFueraDeHoraParams == null))
                {
                    this.mContratarMenuFueraDeHoraParams = new ContratarMenuFueraDeHoraParams();
                }
                return this.mContratarMenuFueraDeHoraParams;
            }
        }
        
        public virtual ContratarMenuSinRegimenOportunoParams ContratarMenuSinRegimenOportunoParams
        {
            get
            {
                if ((this.mContratarMenuSinRegimenOportunoParams == null))
                {
                    this.mContratarMenuSinRegimenOportunoParams = new ContratarMenuSinRegimenOportunoParams();
                }
                return this.mContratarMenuSinRegimenOportunoParams;
            }
        }
        
        public virtual DatosClienteCorrectosAssertExpectedValues DatosClienteCorrectosAssertExpectedValues
        {
            get
            {
                if ((this.mDatosClienteCorrectosAssertExpectedValues == null))
                {
                    this.mDatosClienteCorrectosAssertExpectedValues = new DatosClienteCorrectosAssertExpectedValues();
                }
                return this.mDatosClienteCorrectosAssertExpectedValues;
            }
        }
        
        public virtual EntramosEnHabitacionesParams EntramosEnHabitacionesParams
        {
            get
            {
                if ((this.mEntramosEnHabitacionesParams == null))
                {
                    this.mEntramosEnHabitacionesParams = new EntramosEnHabitacionesParams();
                }
                return this.mEntramosEnHabitacionesParams;
            }
        }
        
        public virtual ErrorNoHabitacionAssertExpectedValues ErrorNoHabitacionAssertExpectedValues
        {
            get
            {
                if ((this.mErrorNoHabitacionAssertExpectedValues == null))
                {
                    this.mErrorNoHabitacionAssertExpectedValues = new ErrorNoHabitacionAssertExpectedValues();
                }
                return this.mErrorNoHabitacionAssertExpectedValues;
            }
        }
        
        public virtual ErrorProveedorSinProductosExpectedValues ErrorProveedorSinProductosExpectedValues
        {
            get
            {
                if ((this.mErrorProveedorSinProductosExpectedValues == null))
                {
                    this.mErrorProveedorSinProductosExpectedValues = new ErrorProveedorSinProductosExpectedValues();
                }
                return this.mErrorProveedorSinProductosExpectedValues;
            }
        }
        
        public virtual EscribirNumNegativoEnCantidadesParams EscribirNumNegativoEnCantidadesParams
        {
            get
            {
                if ((this.mEscribirNumNegativoEnCantidadesParams == null))
                {
                    this.mEscribirNumNegativoEnCantidadesParams = new EscribirNumNegativoEnCantidadesParams();
                }
                return this.mEscribirNumNegativoEnCantidadesParams;
            }
        }
        
        public virtual FechaAnteriorAHoyAssertExpectedValues FechaAnteriorAHoyAssertExpectedValues
        {
            get
            {
                if ((this.mFechaAnteriorAHoyAssertExpectedValues == null))
                {
                    this.mFechaAnteriorAHoyAssertExpectedValues = new FechaAnteriorAHoyAssertExpectedValues();
                }
                return this.mFechaAnteriorAHoyAssertExpectedValues;
            }
        }
        
        public virtual FilterClientByDNIMethodParams FilterClientByDNIMethodParams
        {
            get
            {
                if ((this.mFilterClientByDNIMethodParams == null))
                {
                    this.mFilterClientByDNIMethodParams = new FilterClientByDNIMethodParams();
                }
                return this.mFilterClientByDNIMethodParams;
            }
        }
        
        public virtual FilterClientNotFoundMethodParams FilterClientNotFoundMethodParams
        {
            get
            {
                if ((this.mFilterClientNotFoundMethodParams == null))
                {
                    this.mFilterClientNotFoundMethodParams = new FilterClientNotFoundMethodParams();
                }
                return this.mFilterClientNotFoundMethodParams;
            }
        }
        
        public virtual FinMenorEqInicioAssertExpectedValues FinMenorEqInicioAssertExpectedValues
        {
            get
            {
                if ((this.mFinMenorEqInicioAssertExpectedValues == null))
                {
                    this.mFinMenorEqInicioAssertExpectedValues = new FinMenorEqInicioAssertExpectedValues();
                }
                return this.mFinMenorEqInicioAssertExpectedValues;
            }
        }
        
        public virtual FormularioDescHabitacionesAssertExpectedValues FormularioDescHabitacionesAssertExpectedValues
        {
            get
            {
                if ((this.mFormularioDescHabitacionesAssertExpectedValues == null))
                {
                    this.mFormularioDescHabitacionesAssertExpectedValues = new FormularioDescHabitacionesAssertExpectedValues();
                }
                return this.mFormularioDescHabitacionesAssertExpectedValues;
            }
        }
        
        public virtual FormularioReservaAssertExpectedValues FormularioReservaAssertExpectedValues
        {
            get
            {
                if ((this.mFormularioReservaAssertExpectedValues == null))
                {
                    this.mFormularioReservaAssertExpectedValues = new FormularioReservaAssertExpectedValues();
                }
                return this.mFormularioReservaAssertExpectedValues;
            }
        }
        
        public virtual IniciarIEyWebAppParams IniciarIEyWebAppParams
        {
            get
            {
                if ((this.mIniciarIEyWebAppParams == null))
                {
                    this.mIniciarIEyWebAppParams = new IniciarIEyWebAppParams();
                }
                return this.mIniciarIEyWebAppParams;
            }
        }
        
        public virtual InicioInternetExplorerParams InicioInternetExplorerParams
        {
            get
            {
                if ((this.mInicioInternetExplorerParams == null))
                {
                    this.mInicioInternetExplorerParams = new InicioInternetExplorerParams();
                }
                return this.mInicioInternetExplorerParams;
            }
        }
        
        public virtual InicioSesionCamareroParams InicioSesionCamareroParams
        {
            get
            {
                if ((this.mInicioSesionCamareroParams == null))
                {
                    this.mInicioSesionCamareroParams = new InicioSesionCamareroParams();
                }
                return this.mInicioSesionCamareroParams;
            }
        }
        
        public virtual InicioSesionEAlmacenParams InicioSesionEAlmacenParams
        {
            get
            {
                if ((this.mInicioSesionEAlmacenParams == null))
                {
                    this.mInicioSesionEAlmacenParams = new InicioSesionEAlmacenParams();
                }
                return this.mInicioSesionEAlmacenParams;
            }
        }
        
        public virtual IntroducirCantidadProductosMayorCienParams IntroducirCantidadProductosMayorCienParams
        {
            get
            {
                if ((this.mIntroducirCantidadProductosMayorCienParams == null))
                {
                    this.mIntroducirCantidadProductosMayorCienParams = new IntroducirCantidadProductosMayorCienParams();
                }
                return this.mIntroducirCantidadProductosMayorCienParams;
            }
        }
        
        public virtual IntroducirCantidadProductosNormalParams IntroducirCantidadProductosNormalParams
        {
            get
            {
                if ((this.mIntroducirCantidadProductosNormalParams == null))
                {
                    this.mIntroducirCantidadProductosNormalParams = new IntroducirCantidadProductosNormalParams();
                }
                return this.mIntroducirCantidadProductosNormalParams;
            }
        }
        
        public virtual IntroducirDatosReservaMethodParams IntroducirDatosReservaMethodParams
        {
            get
            {
                if ((this.mIntroducirDatosReservaMethodParams == null))
                {
                    this.mIntroducirDatosReservaMethodParams = new IntroducirDatosReservaMethodParams();
                }
                return this.mIntroducirDatosReservaMethodParams;
            }
        }
        
        public virtual ListaClienteAssertExpectedValues ListaClienteAssertExpectedValues
        {
            get
            {
                if ((this.mListaClienteAssertExpectedValues == null))
                {
                    this.mListaClienteAssertExpectedValues = new ListaClienteAssertExpectedValues();
                }
                return this.mListaClienteAssertExpectedValues;
            }
        }
        
        public virtual LogInRecepcionistaMethodParams LogInRecepcionistaMethodParams
        {
            get
            {
                if ((this.mLogInRecepcionistaMethodParams == null))
                {
                    this.mLogInRecepcionistaMethodParams = new LogInRecepcionistaMethodParams();
                }
                return this.mLogInRecepcionistaMethodParams;
            }
        }
        
        public virtual NoClientsFoundFilterAssertExpectedValues NoClientsFoundFilterAssertExpectedValues
        {
            get
            {
                if ((this.mNoClientsFoundFilterAssertExpectedValues == null))
                {
                    this.mNoClientsFoundFilterAssertExpectedValues = new NoClientsFoundFilterAssertExpectedValues();
                }
                return this.mNoClientsFoundFilterAssertExpectedValues;
            }
        }
        
        public virtual NoHayHabitacionReservaAssertExpectedValues NoHayHabitacionReservaAssertExpectedValues
        {
            get
            {
                if ((this.mNoHayHabitacionReservaAssertExpectedValues == null))
                {
                    this.mNoHayHabitacionReservaAssertExpectedValues = new NoHayHabitacionReservaAssertExpectedValues();
                }
                return this.mNoHayHabitacionReservaAssertExpectedValues;
            }
        }
        
        public virtual RealizaLoginRecepcionistaParams RealizaLoginRecepcionistaParams
        {
            get
            {
                if ((this.mRealizaLoginRecepcionistaParams == null))
                {
                    this.mRealizaLoginRecepcionistaParams = new RealizaLoginRecepcionistaParams();
                }
                return this.mRealizaLoginRecepcionistaParams;
            }
        }
        
        public virtual RealizarLoginRecepcionistaParams RealizarLoginRecepcionistaParams
        {
            get
            {
                if ((this.mRealizarLoginRecepcionistaParams == null))
                {
                    this.mRealizarLoginRecepcionistaParams = new RealizarLoginRecepcionistaParams();
                }
                return this.mRealizarLoginRecepcionistaParams;
            }
        }
        
        public virtual RevisarErrorMenorCeroExpectedValues RevisarErrorMenorCeroExpectedValues
        {
            get
            {
                if ((this.mRevisarErrorMenorCeroExpectedValues == null))
                {
                    this.mRevisarErrorMenorCeroExpectedValues = new RevisarErrorMenorCeroExpectedValues();
                }
                return this.mRevisarErrorMenorCeroExpectedValues;
            }
        }
        
        public virtual SeleccionarProveedorFranciscoSLSinProdParams SeleccionarProveedorFranciscoSLSinProdParams
        {
            get
            {
                if ((this.mSeleccionarProveedorFranciscoSLSinProdParams == null))
                {
                    this.mSeleccionarProveedorFranciscoSLSinProdParams = new SeleccionarProveedorFranciscoSLSinProdParams();
                }
                return this.mSeleccionarProveedorFranciscoSLSinProdParams;
            }
        }
        
        public virtual SeleccionHabitacionDescMethodParams SeleccionHabitacionDescMethodParams
        {
            get
            {
                if ((this.mSeleccionHabitacionDescMethodParams == null))
                {
                    this.mSeleccionHabitacionDescMethodParams = new SeleccionHabitacionDescMethodParams();
                }
                return this.mSeleccionHabitacionDescMethodParams;
            }
        }
        
        public virtual ValidarLogInRecepcionistaExpectedValues ValidarLogInRecepcionistaExpectedValues
        {
            get
            {
                if ((this.mValidarLogInRecepcionistaExpectedValues == null))
                {
                    this.mValidarLogInRecepcionistaExpectedValues = new ValidarLogInRecepcionistaExpectedValues();
                }
                return this.mValidarLogInRecepcionistaExpectedValues;
            }
        }
        
        public virtual ValidarLogInRecepcionistaHotelExpectedValues ValidarLogInRecepcionistaHotelExpectedValues
        {
            get
            {
                if ((this.mValidarLogInRecepcionistaHotelExpectedValues == null))
                {
                    this.mValidarLogInRecepcionistaHotelExpectedValues = new ValidarLogInRecepcionistaHotelExpectedValues();
                }
                return this.mValidarLogInRecepcionistaHotelExpectedValues;
            }
        }
        
        public virtual VerificarHabicaionNoOcupadaExpectedValues VerificarHabicaionNoOcupadaExpectedValues
        {
            get
            {
                if ((this.mVerificarHabicaionNoOcupadaExpectedValues == null))
                {
                    this.mVerificarHabicaionNoOcupadaExpectedValues = new VerificarHabicaionNoOcupadaExpectedValues();
                }
                return this.mVerificarHabicaionNoOcupadaExpectedValues;
            }
        }
        
        public virtual VerificarTabHabitacionesExpectedValues VerificarTabHabitacionesExpectedValues
        {
            get
            {
                if ((this.mVerificarTabHabitacionesExpectedValues == null))
                {
                    this.mVerificarTabHabitacionesExpectedValues = new VerificarTabHabitacionesExpectedValues();
                }
                return this.mVerificarTabHabitacionesExpectedValues;
            }
        }
        
        public virtual VerificarUrlListadoExpectedValues VerificarUrlListadoExpectedValues
        {
            get
            {
                if ((this.mVerificarUrlListadoExpectedValues == null))
                {
                    this.mVerificarUrlListadoExpectedValues = new VerificarUrlListadoExpectedValues();
                }
                return this.mVerificarUrlListadoExpectedValues;
            }
        }
        
        public UIGoogleInternetExplorWindow UIGoogleInternetExplorWindow
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow == null))
                {
                    this.mUIGoogleInternetExplorWindow = new UIGoogleInternetExplorWindow();
                }
                return this.mUIGoogleInternetExplorWindow;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom();
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIIniciarWindow UIIniciarWindow
        {
            get
            {
                if ((this.mUIIniciarWindow == null))
                {
                    this.mUIIniciarWindow = new UIIniciarWindow();
                }
                return this.mUIIniciarWindow;
            }
        }
        
        public UISeleccionarProveedorWindow UISeleccionarProveedorWindow
        {
            get
            {
                if ((this.mUISeleccionarProveedorWindow == null))
                {
                    this.mUISeleccionarProveedorWindow = new UISeleccionarProveedorWindow();
                }
                return this.mUISeleccionarProveedorWindow;
            }
        }
        
        public UISeleccionarProductosWindow UISeleccionarProductosWindow
        {
            get
            {
                if ((this.mUISeleccionarProductosWindow == null))
                {
                    this.mUISeleccionarProductosWindow = new UISeleccionarProductosWindow();
                }
                return this.mUISeleccionarProductosWindow;
            }
        }
        
        public UIConfirmarPedidoTeamCWindow UIConfirmarPedidoTeamCWindow
        {
            get
            {
                if ((this.mUIConfirmarPedidoTeamCWindow == null))
                {
                    this.mUIConfirmarPedidoTeamCWindow = new UIConfirmarPedidoTeamCWindow();
                }
                return this.mUIConfirmarPedidoTeamCWindow;
            }
        }
        
        public UISeleccionarProductosWindow1 UISeleccionarProductosWindow1
        {
            get
            {
                if ((this.mUISeleccionarProductosWindow1 == null))
                {
                    this.mUISeleccionarProductosWindow1 = new UISeleccionarProductosWindow1();
                }
                return this.mUISeleccionarProductosWindow1;
            }
        }
        
        public UISeleccionarProductosWindow2 UISeleccionarProductosWindow2
        {
            get
            {
                if ((this.mUISeleccionarProductosWindow2 == null))
                {
                    this.mUISeleccionarProductosWindow2 = new UISeleccionarProductosWindow2();
                }
                return this.mUISeleccionarProductosWindow2;
            }
        }
        
        public UISeleccionarProductosWindow3 UISeleccionarProductosWindow3
        {
            get
            {
                if ((this.mUISeleccionarProductosWindow3 == null))
                {
                    this.mUISeleccionarProductosWindow3 = new UISeleccionarProductosWindow3();
                }
                return this.mUISeleccionarProductosWindow3;
            }
        }
        
        public UIIndiceClienteTeamCatWindow UIIndiceClienteTeamCatWindow
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatWindow == null))
                {
                    this.mUIIndiceClienteTeamCatWindow = new UIIndiceClienteTeamCatWindow();
                }
                return this.mUIIndiceClienteTeamCatWindow;
            }
        }
        
        public UIDetailsTeamCatHotelIWindow UIDetailsTeamCatHotelIWindow
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelIWindow == null))
                {
                    this.mUIDetailsTeamCatHotelIWindow = new UIDetailsTeamCatHotelIWindow();
                }
                return this.mUIDetailsTeamCatHotelIWindow;
            }
        }
        
        public UINuevaReservaDatosResWindow UINuevaReservaDatosResWindow
        {
            get
            {
                if ((this.mUINuevaReservaDatosResWindow == null))
                {
                    this.mUINuevaReservaDatosResWindow = new UINuevaReservaDatosResWindow();
                }
                return this.mUINuevaReservaDatosResWindow;
            }
        }
        
        public UIIndiceClienteTeamCatWindow1 UIIndiceClienteTeamCatWindow1
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatWindow1 == null))
                {
                    this.mUIIndiceClienteTeamCatWindow1 = new UIIndiceClienteTeamCatWindow1();
                }
                return this.mUIIndiceClienteTeamCatWindow1;
            }
        }
        
        public UIIndiceClienteTeamCatWindow2 UIIndiceClienteTeamCatWindow2
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatWindow2 == null))
                {
                    this.mUIIndiceClienteTeamCatWindow2 = new UIIndiceClienteTeamCatWindow2();
                }
                return this.mUIIndiceClienteTeamCatWindow2;
            }
        }
        
        public UIIndiceClienteTeamCatWindow3 UIIndiceClienteTeamCatWindow3
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatWindow3 == null))
                {
                    this.mUIIndiceClienteTeamCatWindow3 = new UIIndiceClienteTeamCatWindow3();
                }
                return this.mUIIndiceClienteTeamCatWindow3;
            }
        }
        
        public UINuevaReservaDatosResWindow1 UINuevaReservaDatosResWindow1
        {
            get
            {
                if ((this.mUINuevaReservaDatosResWindow1 == null))
                {
                    this.mUINuevaReservaDatosResWindow1 = new UINuevaReservaDatosResWindow1();
                }
                return this.mUINuevaReservaDatosResWindow1;
            }
        }
        
        public UINuevaReservaDatosResWindow2 UINuevaReservaDatosResWindow2
        {
            get
            {
                if ((this.mUINuevaReservaDatosResWindow2 == null))
                {
                    this.mUINuevaReservaDatosResWindow2 = new UINuevaReservaDatosResWindow2();
                }
                return this.mUINuevaReservaDatosResWindow2;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginTeamCatHotelIntWindow UILoginTeamCatHotelIntWindow
        {
            get
            {
                if ((this.mUILoginTeamCatHotelIntWindow == null))
                {
                    this.mUILoginTeamCatHotelIntWindow = new UILoginTeamCatHotelIntWindow();
                }
                return this.mUILoginTeamCatHotelIntWindow;
            }
        }
        
        public UILoginTeamCatHotelIntWindow1 UILoginTeamCatHotelIntWindow1
        {
            get
            {
                if ((this.mUILoginTeamCatHotelIntWindow1 == null))
                {
                    this.mUILoginTeamCatHotelIntWindow1 = new UILoginTeamCatHotelIntWindow1();
                }
                return this.mUILoginTeamCatHotelIntWindow1;
            }
        }
        
        public UIAplicacionesenejecucWindow UIAplicacionesenejecucWindow
        {
            get
            {
                if ((this.mUIAplicacionesenejecucWindow == null))
                {
                    this.mUIAplicacionesenejecucWindow = new UIAplicacionesenejecucWindow();
                }
                return this.mUIAplicacionesenejecucWindow;
            }
        }
        
        public UIIndexTeamCatHotelIntWindow UIIndexTeamCatHotelIntWindow
        {
            get
            {
                if ((this.mUIIndexTeamCatHotelIntWindow == null))
                {
                    this.mUIIndexTeamCatHotelIntWindow = new UIIndexTeamCatHotelIntWindow();
                }
                return this.mUIIndexTeamCatHotelIntWindow;
            }
        }
        
        public UIDetailsTeamCatHotelIWindow1 UIDetailsTeamCatHotelIWindow1
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelIWindow1 == null))
                {
                    this.mUIDetailsTeamCatHotelIWindow1 = new UIDetailsTeamCatHotelIWindow1();
                }
                return this.mUIDetailsTeamCatHotelIWindow1;
            }
        }
        
        public UIDetailsTeamCatHotelIWindow2 UIDetailsTeamCatHotelIWindow2
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelIWindow2 == null))
                {
                    this.mUIDetailsTeamCatHotelIWindow2 = new UIDetailsTeamCatHotelIWindow2();
                }
                return this.mUIDetailsTeamCatHotelIWindow2;
            }
        }
        #endregion
        
        #region Fields
        private AbrirInternetExplorerParams mAbrirInternetExplorerParams;
        
        private AssertExisteSaunaParaSeleccionarExpectedValues mAssertExisteSaunaParaSeleccionarExpectedValues;
        
        private AssertHabitacionOcupadaExpectedValues mAssertHabitacionOcupadaExpectedValues;
        
        private AssertLogInShownExpectedValues mAssertLogInShownExpectedValues;
        
        private AssertVerificarLoginRecepcionistaExpectedValues mAssertVerificarLoginRecepcionistaExpectedValues;
        
        private AssertVolverListadoHabitacionesExpectedValues mAssertVolverListadoHabitacionesExpectedValues;
        
        private AssertVueltaMenuMsgNoOcupadaExpectedValues mAssertVueltaMenuMsgNoOcupadaExpectedValues;
        
        private ClienteDNIEncontradoAssertExpectedValues mClienteDNIEncontradoAssertExpectedValues;
        
        private ComprobacionInicioSesionCamareroExpectedValues mComprobacionInicioSesionCamareroExpectedValues;
        
        private ComprobacionMensajeCorrectoContratacionMenuExpectedValues mComprobacionMensajeCorrectoContratacionMenuExpectedValues;
        
        private ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues mComprobacionMensajeErrorFueraDeHoraMenuExpectedValues;
        
        private ComprobacionMensajeErrorReservaNoEncontradaExpectedValues mComprobacionMensajeErrorReservaNoEncontradaExpectedValues;
        
        private ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues mComprobacionMensajeInformacionAntesDeConfirmarExpectedValues;
        
        private ComprobacionTextBoxNumHabitacionVacioExpectedValues mComprobacionTextBoxNumHabitacionVacioExpectedValues;
        
        private ComprobacionWebContratarMenuExpectedValues mComprobacionWebContratarMenuExpectedValues;
        
        private ComprobarComboBoxProveedoresExpectedValues mComprobarComboBoxProveedoresExpectedValues;
        
        private ComprobarErrorMayorCienExpectedValues mComprobarErrorMayorCienExpectedValues;
        
        private ComprobarInicioSesionEAlmacenExpectedValues mComprobarInicioSesionEAlmacenExpectedValues;
        
        private ComprobarResumenPedidoExpectedValues mComprobarResumenPedidoExpectedValues;
        
        private ConfimarServicioSaunaParams mConfimarServicioSaunaParams;
        
        private ContratarMenuAntesDeConfirmarParams mContratarMenuAntesDeConfirmarParams;
        
        private ContratarMenuCancelarNumeroComensalesParams mContratarMenuCancelarNumeroComensalesParams;
        
        private ContratarMenuCancelarPrimerContratarParams mContratarMenuCancelarPrimerContratarParams;
        
        private ContratarMenuConExitoParams mContratarMenuConExitoParams;
        
        private ContratarMenuConReservaNoValidaParams mContratarMenuConReservaNoValidaParams;
        
        private ContratarMenuFueraDeHoraParams mContratarMenuFueraDeHoraParams;
        
        private ContratarMenuSinRegimenOportunoParams mContratarMenuSinRegimenOportunoParams;
        
        private DatosClienteCorrectosAssertExpectedValues mDatosClienteCorrectosAssertExpectedValues;
        
        private EntramosEnHabitacionesParams mEntramosEnHabitacionesParams;
        
        private ErrorNoHabitacionAssertExpectedValues mErrorNoHabitacionAssertExpectedValues;
        
        private ErrorProveedorSinProductosExpectedValues mErrorProveedorSinProductosExpectedValues;
        
        private EscribirNumNegativoEnCantidadesParams mEscribirNumNegativoEnCantidadesParams;
        
        private FechaAnteriorAHoyAssertExpectedValues mFechaAnteriorAHoyAssertExpectedValues;
        
        private FilterClientByDNIMethodParams mFilterClientByDNIMethodParams;
        
        private FilterClientNotFoundMethodParams mFilterClientNotFoundMethodParams;
        
        private FinMenorEqInicioAssertExpectedValues mFinMenorEqInicioAssertExpectedValues;
        
        private FormularioDescHabitacionesAssertExpectedValues mFormularioDescHabitacionesAssertExpectedValues;
        
        private FormularioReservaAssertExpectedValues mFormularioReservaAssertExpectedValues;
        
        private IniciarIEyWebAppParams mIniciarIEyWebAppParams;
        
        private InicioInternetExplorerParams mInicioInternetExplorerParams;
        
        private InicioSesionCamareroParams mInicioSesionCamareroParams;
        
        private InicioSesionEAlmacenParams mInicioSesionEAlmacenParams;
        
        private IntroducirCantidadProductosMayorCienParams mIntroducirCantidadProductosMayorCienParams;
        
        private IntroducirCantidadProductosNormalParams mIntroducirCantidadProductosNormalParams;
        
        private IntroducirDatosReservaMethodParams mIntroducirDatosReservaMethodParams;
        
        private ListaClienteAssertExpectedValues mListaClienteAssertExpectedValues;
        
        private LogInRecepcionistaMethodParams mLogInRecepcionistaMethodParams;
        
        private NoClientsFoundFilterAssertExpectedValues mNoClientsFoundFilterAssertExpectedValues;
        
        private NoHayHabitacionReservaAssertExpectedValues mNoHayHabitacionReservaAssertExpectedValues;
        
        private RealizaLoginRecepcionistaParams mRealizaLoginRecepcionistaParams;
        
        private RealizarLoginRecepcionistaParams mRealizarLoginRecepcionistaParams;
        
        private RevisarErrorMenorCeroExpectedValues mRevisarErrorMenorCeroExpectedValues;
        
        private SeleccionarProveedorFranciscoSLSinProdParams mSeleccionarProveedorFranciscoSLSinProdParams;
        
        private SeleccionHabitacionDescMethodParams mSeleccionHabitacionDescMethodParams;
        
        private ValidarLogInRecepcionistaExpectedValues mValidarLogInRecepcionistaExpectedValues;
        
        private ValidarLogInRecepcionistaHotelExpectedValues mValidarLogInRecepcionistaHotelExpectedValues;
        
        private VerificarHabicaionNoOcupadaExpectedValues mVerificarHabicaionNoOcupadaExpectedValues;
        
        private VerificarTabHabitacionesExpectedValues mVerificarTabHabitacionesExpectedValues;
        
        private VerificarUrlListadoExpectedValues mVerificarUrlListadoExpectedValues;
        
        private UIGoogleInternetExplorWindow mUIGoogleInternetExplorWindow;
        
        private UIItemCustom mUIItemCustom;
        
        private UIIniciarWindow mUIIniciarWindow;
        
        private UISeleccionarProveedorWindow mUISeleccionarProveedorWindow;
        
        private UISeleccionarProductosWindow mUISeleccionarProductosWindow;
        
        private UIConfirmarPedidoTeamCWindow mUIConfirmarPedidoTeamCWindow;
        
        private UISeleccionarProductosWindow1 mUISeleccionarProductosWindow1;
        
        private UISeleccionarProductosWindow2 mUISeleccionarProductosWindow2;
        
        private UISeleccionarProductosWindow3 mUISeleccionarProductosWindow3;
        
        private UIIndiceClienteTeamCatWindow mUIIndiceClienteTeamCatWindow;
        
        private UIDetailsTeamCatHotelIWindow mUIDetailsTeamCatHotelIWindow;
        
        private UINuevaReservaDatosResWindow mUINuevaReservaDatosResWindow;
        
        private UIIndiceClienteTeamCatWindow1 mUIIndiceClienteTeamCatWindow1;
        
        private UIIndiceClienteTeamCatWindow2 mUIIndiceClienteTeamCatWindow2;
        
        private UIIndiceClienteTeamCatWindow3 mUIIndiceClienteTeamCatWindow3;
        
        private UINuevaReservaDatosResWindow1 mUINuevaReservaDatosResWindow1;
        
        private UINuevaReservaDatosResWindow2 mUINuevaReservaDatosResWindow2;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UILoginTeamCatHotelIntWindow mUILoginTeamCatHotelIntWindow;
        
        private UILoginTeamCatHotelIntWindow1 mUILoginTeamCatHotelIntWindow1;
        
        private UIAplicacionesenejecucWindow mUIAplicacionesenejecucWindow;
        
        private UIIndexTeamCatHotelIntWindow mUIIndexTeamCatHotelIntWindow;
        
        private UIDetailsTeamCatHotelIWindow1 mUIDetailsTeamCatHotelIWindow1;
        
        private UIDetailsTeamCatHotelIWindow2 mUIDetailsTeamCatHotelIWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AbrirInternetExplorer'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AbrirInternetExplorerParams
    {
        
        #region Fields
        /// <summary>
        /// Iniciar '%SystemRoot%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' con los argumentos '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
        /// </summary>
        public string ExePath = "C:\\Windows\\SystemApps\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\MicrosoftEdge.exe";
        
        /// <summary>
        /// Iniciar '%SystemRoot%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' con los argumentos '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
        /// </summary>
        public string AlternateExePath = "%SystemRoot%\\SystemApps\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\MicrosoftEdge.exe";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertExisteSaunaParaSeleccionar'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertExisteSaunaParaSeleccionarExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Sauna' celda es igual a 'Sauna '
        /// </summary>
        public string UISaunaCellInnerText = "Sauna ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertHabitacionOcupada'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertHabitacionOcupadaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Value' de casilla es igual a 'on'
        /// </summary>
        public string UIItemCheckBoxValue = "on";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertLogInShown'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertLogInShownExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 3 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
        /// </summary>
        public string UILoginButtonDisplayText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertVerificarLoginRecepcionista'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertVerificarLoginRecepcionistaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Hello recepcionista@hotel.fbk!' vínculo es igual a 'Hello recepcionista@hotel.fbk!'
        /// </summary>
        public string UIHellorecepcionistahoHyperlinkInnerText = "Hello recepcionista@hotel.fbk!";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertVolverListadoHabitaciones'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertVolverListadoHabitacionesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto es igual a 'Habitacions'
        /// </summary>
        public string UIDirecciónEditText = "Habitacions";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertVueltaMenuMsgNoOcupada'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class AssertVueltaMenuMsgNoOcupadaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto contiene 'ocupada=False'
        /// </summary>
        public string UIDirecciónEditText = "ocupada=False";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ClienteDNIEncontradoAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ClienteDNIEncontradoAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'InnerText' de '12345678K' celda es igual a '12345678K '
        /// </summary>
        public string UIItem12345678KCellInnerText = "12345678K ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionInicioSesionCamarero'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionInicioSesionCamareroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Hello camarero@hotel.fbk!' vínculo es igual a 'Hello camarero@hotel.fbk!'
        /// </summary>
        public string UIHellocamarerohotelfbHyperlinkInnerText = "Hello camarero@hotel.fbk!";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionMensajeCorrectoContratacionMenu'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionMensajeCorrectoContratacionMenuExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Success' etiqueta es igual a 'Success'
        /// </summary>
        public string UISuccessLabelInnerText = "Success";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionMensajeErrorFueraDeHoraMenu'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionMensajeErrorFueraDeHoraMenuExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error: Out of time' etiqueta es igual a 'Error: Out of time'
        /// </summary>
        public string UIErrorOutoftimeLabelInnerText = "Error: Out of time";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionMensajeErrorReservaNoEncontrada'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionMensajeErrorReservaNoEncontradaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error: Reserva not found' etiqueta es igual a 'Error: Reserva not found'
        /// </summary>
        public string UIErrorReservanotfoundLabelInnerText = "Error: Reserva not found";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionMensajeInformacionAntesDeConfirmar'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionMensajeInformacionAntesDeConfirmarExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Cliente: Muriel Habichuela Pulse de nuevo contrata...' etiqueta es igual a 'Cliente: Muriel Habichuela Pulse de nuevo contratar para confirmar.'
        /// </summary>
        public string UIClienteMurielHabichuLabelInnerText = "Cliente: Muriel Habichuela Pulse de nuevo contratar para confirmar.";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionTextBoxNumHabitacionVacio'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionTextBoxNumHabitacionVacioExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'nHabitacion' cuadro de texto es igual a 'INPUT'
        /// </summary>
        public string UINHabitacionEditTagName = "INPUT";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobacionWebContratarMenu'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobacionWebContratarMenuExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto es igual a 'http://localhost:21013/Menus/ContratarMenu'
        /// </summary>
        public string UIDirecciónEditText = "http://localhost:21013/Menus/ContratarMenu";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobarComboBoxProveedores'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobarComboBoxProveedoresExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'idProveedor' cuadro combinado es igual a 'PedroSL  JoseSL  FranciscoSL  '
        /// </summary>
        public string UIIdProveedorComboBoxInnerText = "PedroSL  JoseSL  FranciscoSL  ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobarErrorMayorCien'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobarErrorMayorCienExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error. La cantidad no puede ser mayor qu' control personalizado es igual a 'Error. La cantidad no puede ser mayor que 100.'
        /// </summary>
        public string UIErrorLacantidadnopueCustomInnerText = "Error. La cantidad no puede ser mayor que 100.";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobarInicioSesionEAlmacen'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobarInicioSesionEAlmacenExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Hello ealmacen@hotel.fbk!' vínculo es igual a 'Hello ealmacen@hotel.fbk!'
        /// </summary>
        public string UIHelloealmacenhotelfbHyperlinkInnerText = "Hello ealmacen@hotel.fbk!";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ComprobarResumenPedido'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobarResumenPedidoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'PedroSL' celda es igual a 'PedroSL  '
        /// </summary>
        public string UIPedroSLCellInnerText = "PedroSL  ";
        
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Toalla' celda es igual a 'Toalla  '
        /// </summary>
        public string UIToallaCellInnerText = "Toalla  ";
        
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de '1' celda es igual a '1  '
        /// </summary>
        public string UIItem1CellInnerText = "1  ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ConfimarServicioSauna'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ConfimarServicioSaunaParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir '2016-12-18T22:24' en cuadro de texto 'Fecha inicio:'
        /// </summary>
        public string UIFechainicioEditText = "2016-12-18T22:24";
        
        /// <summary>
        /// Escribir '2016-12-24T22:24' en cuadro de texto 'Fecha fin:'
        /// </summary>
        public string UIFechafinEditText = "2016-12-24T22:24";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuAntesDeConfirmar'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuAntesDeConfirmarParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox1SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '2' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuCancelarNumeroComensales'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuCancelarNumeroComensalesParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox2SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '1' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuCancelarPrimerContratar'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuCancelarPrimerContratarParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox2SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '1' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuConExito'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuConExitoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox1SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '2' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuConReservaNoValida'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuConReservaNoValidaParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox1SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '666' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "666";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuFueraDeHora'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuFueraDeHoraParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Desayuno' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox1SelectedItem = "Desayuno";
        
        /// <summary>
        /// Escribir '2' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ContratarMenuSinRegimenOportuno'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ContratarMenuSinRegimenOportunoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Comida' en cuadro combinado 'menuId'
        /// </summary>
        public string UIMenuIdComboBox1SelectedItem = "Comida";
        
        /// <summary>
        /// Escribir '1' en cuadro de texto 'nHabitacion'
        /// </summary>
        public string UINHabitacionEditText = "1";
        
        /// <summary>
        /// Escribir '3' en cuadro de texto 'nComensales'
        /// </summary>
        public string UINComensalesEditText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'DatosClienteCorrectosAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class DatosClienteCorrectosAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'InnerText' de '12345678K' control personalizado es igual a '12345678K '
        /// </summary>
        public string UIItem12345678KCustomInnerText = "12345678K ";
        
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Eustaquio' control personalizado es igual a 'Eustaquio '
        /// </summary>
        public string UIEustaquioCustomInnerText = "Eustaquio ";
        
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Habichuela' control personalizado es igual a 'Habichuela '
        /// </summary>
        public string UIHabichuelaCustomInnerText = "Habichuela ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'EntramosEnHabitaciones'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class EntramosEnHabitacionesParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'recepcionista' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "recepcionista";
        
        /// <summary>
        /// Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText1 = "recepcionista@hotel.fbk";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wPNrJujwW+cQ3yw9q3/2Lt1";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditSendKeys = "nlpHdv/bx30HDttDrfmCSw==";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword1 = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ErrorNoHabitacionAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ErrorNoHabitacionAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No ha seleccionado ninguna habitacion' control personalizado es igual a 'No ha seleccionado ninguna habitacion'
        /// </summary>
        public string UINohaseleccionadoningCustomInnerText = "No ha seleccionado ninguna habitacion";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ErrorProveedorSinProductos'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ErrorProveedorSinProductosExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error. El proveedor seleccionado no tien' control personalizado es igual a 'Error. El proveedor seleccionado no tiene productos. Seleccione uno distinto.'
        /// </summary>
        public string UIErrorElproveedorseleCustomInnerText = "Error. El proveedor seleccionado no tiene productos. Seleccione uno distinto.";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'EscribirNumNegativoEnCantidades'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class EscribirNumNegativoEnCantidadesParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir '-1' en cuadro de texto 'listaCantidades'
        /// </summary>
        public string UIListaCantidadesEditText = "-1";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FechaAnteriorAHoyAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FechaAnteriorAHoyAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Oops, las fechas introducidas no pueden' control personalizado es igual a 'Oops, las fechas introducidas no pueden ser anteriores a la fecha actual'
        /// </summary>
        public string UIOopslasfechasintroduCustomInnerText = "Oops, las fechas introducidas no pueden ser anteriores a la fecha actual";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FilterClientByDNIMethod'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FilterClientByDNIMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir '12345678K' en cuadro de texto 'NIF'
        /// </summary>
        public string UINIFEditText = "12345678K";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FilterClientNotFoundMethod'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FilterClientNotFoundMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir '5651' en cuadro de texto 'NIF'
        /// </summary>
        public string UINIFEditText = "5651";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FinMenorEqInicioAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FinMenorEqInicioAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Oops, posiblemente ha confundido la Fech' control personalizado es igual a 'Oops, posiblemente ha confundido la Fecha de Inicio con la Fecha de Fin'
        /// </summary>
        public string UIOopsposiblementehacoCustomInnerText = "Oops, posiblemente ha confundido la Fecha de Inicio con la Fecha de Fin";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FormularioDescHabitacionesAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FormularioDescHabitacionesAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'descuentoSeleccionado' botón de radio es igual a 'descuentoSeleccionado'
        /// </summary>
        public string UIDescuentoSeleccionadRadioButtonName = "descuentoSeleccionado";
        
        /// <summary>
        /// Compruebe que la propiedad 'Name' de 'habitacionesSeleccionadas' casilla es igual a 'habitacionesSeleccionadas'
        /// </summary>
        public string UIHabitacionesSeleccioCheckBoxName = "habitacionesSeleccionadas";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FormularioReservaAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class FormularioReservaAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'Fecha Inicio:' cuadro de texto es igual a 'fechaInicio'
        /// </summary>
        public string UIFechaInicioEdit1Name = "fechaInicio";
        
        /// <summary>
        /// Compruebe que la propiedad 'Name' de 'Fecha Fin:' cuadro de texto es igual a 'fechaFin'
        /// </summary>
        public string UIFechaFinEdit1Name = "fechaFin";
        
        /// <summary>
        /// Compruebe que la propiedad 'Name' de 'Regimen de comidas:' cuadro combinado es igual a 'regimenComida'
        /// </summary>
        public string UIRegimendecomidasComboBox1Name = "regimenComida";
        
        /// <summary>
        /// Compruebe que la propiedad 'Name' de 'Comentario sobre la reserva:' cuadro de texto es igual a 'comentarios'
        /// </summary>
        public string UIComentariosobrelaresEdit1Name = "comentarios";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'IniciarIEyWebApp'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class IniciarIEyWebAppParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'http://google.es/' mediante nueva instancia de explorador
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "http://google.es/";
        
        /// <summary>
        /// Ir a página web 'http://localhost:21013/'
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl1 = "http://localhost:21013/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InicioInternetExplorer'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class InicioInternetExplorerParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'http://localhost:21013/' mediante nueva instancia de explorador
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "http://localhost:21013/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InicioSesionCamarero'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class InicioSesionCamareroParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'camarero@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "camarero@hotel.fbk";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InicioSesionEAlmacen'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class InicioSesionEAlmacenParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'ealmacen@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "ealmacen@hotel.fbk";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wPNrJujwW+cQ3yw9q3/2Lt1";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditSendKeys = "nlpHdv/bx30HDttDrfmCSw==";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword1 = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'IntroducirCantidadProductosMayorCien'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class IntroducirCantidadProductosMayorCienParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir '101' en cuadro de texto 'listaCantidades'
        /// </summary>
        public string UIListaCantidadesEditText = "101";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'IntroducirCantidadProductosNormal'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class IntroducirCantidadProductosNormalParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir '1' en cuadro de texto 'listaCantidades'
        /// </summary>
        public string UIListaCantidadesEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'IntroducirDatosReservaMethod'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class IntroducirDatosReservaMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir '2016-12-17' en cuadro de texto 'Fecha Inicio:'
        /// </summary>
        public string UIFechaInicioEditText = "2016-12-17";
        
        /// <summary>
        /// Escribir '2016-12-18' en cuadro de texto 'Fecha Fin:'
        /// </summary>
        public string UIFechaFinEditText = "2016-12-18";
        
        /// <summary>
        /// Seleccionar 'Media Pension' en cuadro combinado 'Regimen de comidas:'
        /// </summary>
        public string UIRegimendecomidasComboBoxSelectedItem = "Media Pension";
        
        /// <summary>
        /// Escribir 'Yeeee' en cuadro de texto 'Comentario sobre la reserva:'
        /// </summary>
        public string UIComentariosobrelaresEditText = "Yeeee";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ListaClienteAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ListaClienteAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Compruebe que la propiedad 'Name' de 'Indice Cliente - TeamCatHotel' pestaña es igual a 'Indice Cliente - TeamCatHotel'
        /// </summary>
        public string UIIndiceClienteTeamCatTabPageName = "Indice Cliente - TeamCatHotel";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'LogInRecepcionistaMethod'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class LogInRecepcionistaMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 5 segundos al retraso del usuario entre acciones; Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "recepcionista@hotel.fbk";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'NoClientsFoundFilterAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class NoClientsFoundFilterAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Indice Crear Nuevo NIF:' panel es igual a 'Indice
        ///
        ///Crear Nuevo 
        ///
        ///
        ///NIF:   
        ///
        ///
        ///apellidos 
        ///
        ///codigoPostal 
        ///
        ///correoElectronico 
        ///
        ///direccion 
        ///
        ///localidad 
        ///
        ///nif 
        ///
        ///nombre 
        ///
        ///pais 
        ///
        ///provincia 
        ///
        ///telefono 
        ///
        ///numeroTarjeta 
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///© 2016 - TeamCatHotel'
        /// </summary>
        public string UIIndiceCrearNuevoNIFPaneInnerText = "Indice\r\n\r\nCrear Nuevo \r\n\r\n\r\nNIF:   \r\n\r\n\r\napellidos \r\n\r\ncodigoPostal \r\n\r\ncorreoEle" +
            "ctronico \r\n\r\ndireccion \r\n\r\nlocalidad \r\n\r\nnif \r\n\r\nnombre \r\n\r\npais \r\n\r\nprovincia \r" +
            "\n\r\ntelefono \r\n\r\nnumeroTarjeta \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n© 2016 - TeamCatHotel";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'NoHayHabitacionReservaAssert'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class NoHayHabitacionReservaAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No hay habitaciones disponibles con las' control personalizado es igual a 'No hay habitaciones disponibles con las fechas dadas'
        /// </summary>
        public string UINohayhabitacionesdisCustomInnerText = "No hay habitaciones disponibles con las fechas dadas";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'RealizaLoginRecepcionista'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class RealizaLoginRecepcionistaParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'recepcionista' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEdit1Text = "recepcionista";
        
        /// <summary>
        /// Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEdit1SendKeys = "2";
        
        /// <summary>
        /// Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEdit1Text1 = "recepcionista@hotel.fbk";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEdit1SendKeys1 = "{Tab}";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wPNrJujwW+cQ3yw9q3/2Lt1";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditSendKeys = "nlpHdv/bx30HDttDrfmCSw==";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword1 = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'RealizarLoginRecepcionista'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class RealizarLoginRecepcionistaParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'recepcionista' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "recepcionista";
        
        /// <summary>
        /// Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Escribir 'recepcionista@hotel.fbk' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText1 = "recepcionista@hotel.fbk";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wPNrJujwW+cQ3yw9q3/2Lt1";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditSendKeys = "nlpHdv/bx30HDttDrfmCSw==";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword1 = "mBQq9cL71wN8oINn6J7fHDS4/uDoNqE0nepAgLtqoQ4=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'RevisarErrorMenorCero'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class RevisarErrorMenorCeroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error. La cantidad no puede ser menor qu' control personalizado es igual a 'Error. La cantidad no puede ser menor que 0.'
        /// </summary>
        public string UIErrorLacantidadnopueCustomInnerText = "Error. La cantidad no puede ser menor que 0.";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionarProveedorFranciscoSLSinProd'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class SeleccionarProveedorFranciscoSLSinProdParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'FranciscoSL' en cuadro combinado 'idProveedor'
        /// </summary>
        public string UIIdProveedorComboBox1SelectedItem = "FranciscoSL";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionHabitacionDescMethod'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class SeleccionHabitacionDescMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar botón de radio 'descuentoSeleccionado'
        /// </summary>
        public bool UIDescuentoSeleccionadRadioButtonSelected = true;
        
        /// <summary>
        /// Seleccionar casilla 'habitacionesSeleccionadas'
        /// </summary>
        public bool UIHabitacionesSeleccioCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ValidarLogInRecepcionista'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ValidarLogInRecepcionistaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
        /// </summary>
        public string UILoginButtonDisplayText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ValidarLogInRecepcionistaHotel'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ValidarLogInRecepcionistaHotelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'DisplayText' de 'Log in' botón es igual a 'Log in'
        /// </summary>
        public string UILoginButtonDisplayText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'VerificarHabicaionNoOcupada'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class VerificarHabicaionNoOcupadaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Checked' de casilla es igual a 'False'
        /// </summary>
        public bool UIItemCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'VerificarTabHabitaciones'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class VerificarTabHabitacionesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Habitaciones' vínculo es igual a 'Habitaciones'
        /// </summary>
        public string UIHabitacionesHyperlinkInnerText = "Habitaciones";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'VerificarUrlListado'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class VerificarUrlListadoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'Text' de 'Dirección' cuadro de texto contiene '/Habitacions'
        /// </summary>
        public string UIDirecciónEditText = "/Habitacions";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class ComprobarErrorProductosNoSeleccionadosExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Error. No ha seleccionado productos.' control personalizado es igual a 'Error. No ha seleccionado productos.'
        /// </summary>
        public string UIErrorNohaseleccionadCustomInnerText = "Error. No ha seleccionado productos.";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIGoogleInternetExplorWindow : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("Home Page - TeamCatHotel");
            this.WindowTitles.Add("Log in - TeamCatHotel");
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            this.WindowTitles.Add("Página en blanco");
            this.WindowTitles.Add("SeleccionComensales - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            this.WindowTitles.Add("Delete - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageTeamCatHotelDocument UIHomePageTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIHomePageTeamCatHotelDocument == null))
                {
                    this.mUIHomePageTeamCatHotelDocument = new UIHomePageTeamCatHotelDocument(this);
                }
                return this.mUIHomePageTeamCatHotelDocument;
            }
        }
        
        public UILoginTeamCatHotelDocument UILoginTeamCatHotelDocument
        {
            get
            {
                if ((this.mUILoginTeamCatHotelDocument == null))
                {
                    this.mUILoginTeamCatHotelDocument = new UILoginTeamCatHotelDocument(this);
                }
                return this.mUILoginTeamCatHotelDocument;
            }
        }
        
        public UIContratarMenuTeamCatDocument UIContratarMenuTeamCatDocument
        {
            get
            {
                if ((this.mUIContratarMenuTeamCatDocument == null))
                {
                    this.mUIContratarMenuTeamCatDocument = new UIContratarMenuTeamCatDocument(this);
                }
                return this.mUIContratarMenuTeamCatDocument;
            }
        }
        
        public UIGoogleDocument UIGoogleDocument
        {
            get
            {
                if ((this.mUIGoogleDocument == null))
                {
                    this.mUIGoogleDocument = new UIGoogleDocument(this);
                }
                return this.mUIGoogleDocument;
            }
        }
        
        public UILoginTeamCatHotelDocument1 UILoginTeamCatHotelDocument1
        {
            get
            {
                if ((this.mUILoginTeamCatHotelDocument1 == null))
                {
                    this.mUILoginTeamCatHotelDocument1 = new UILoginTeamCatHotelDocument1(this);
                }
                return this.mUILoginTeamCatHotelDocument1;
            }
        }
        
        public UISeleccionComensalesTDocument UISeleccionComensalesTDocument
        {
            get
            {
                if ((this.mUISeleccionComensalesTDocument == null))
                {
                    this.mUISeleccionComensalesTDocument = new UISeleccionComensalesTDocument(this);
                }
                return this.mUISeleccionComensalesTDocument;
            }
        }
        
        public UIContratarMenuTeamCatDocument1 UIContratarMenuTeamCatDocument1
        {
            get
            {
                if ((this.mUIContratarMenuTeamCatDocument1 == null))
                {
                    this.mUIContratarMenuTeamCatDocument1 = new UIContratarMenuTeamCatDocument1(this);
                }
                return this.mUIContratarMenuTeamCatDocument1;
            }
        }
        
        public UIIndexTeamCatHotelDocument UIIndexTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIIndexTeamCatHotelDocument == null))
                {
                    this.mUIIndexTeamCatHotelDocument = new UIIndexTeamCatHotelDocument(this);
                }
                return this.mUIIndexTeamCatHotelDocument;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginTeamCatHotelDocument2 UILoginTeamCatHotelDocument2
        {
            get
            {
                if ((this.mUILoginTeamCatHotelDocument2 == null))
                {
                    this.mUILoginTeamCatHotelDocument2 = new UILoginTeamCatHotelDocument2(this);
                }
                return this.mUILoginTeamCatHotelDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageTeamCatHotelDocument mUIHomePageTeamCatHotelDocument;
        
        private UILoginTeamCatHotelDocument mUILoginTeamCatHotelDocument;
        
        private UIContratarMenuTeamCatDocument mUIContratarMenuTeamCatDocument;
        
        private UIGoogleDocument mUIGoogleDocument;
        
        private UILoginTeamCatHotelDocument1 mUILoginTeamCatHotelDocument1;
        
        private UISeleccionComensalesTDocument mUISeleccionComensalesTDocument;
        
        private UIContratarMenuTeamCatDocument1 mUIContratarMenuTeamCatDocument1;
        
        private UIIndexTeamCatHotelDocument mUIIndexTeamCatHotelDocument;
        
        private UIItemWindow mUIItemWindow;
        
        private UILoginTeamCatHotelDocument2 mUILoginTeamCatHotelDocument2;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIHomePageTeamCatHotelDocument : HtmlDocument
    {
        
        public UIHomePageTeamCatHotelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/";
            this.WindowTitles.Add("Home Page - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContratarMenuHyperlink
        {
            get
            {
                if ((this.mUIContratarMenuHyperlink == null))
                {
                    this.mUIContratarMenuHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Contratar Menu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Menus/ContratarMenu\"";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUIContratarMenuHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarMenuHyperlink;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUILoginHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlHyperlink UIHacerPedidoHyperlink
        {
            get
            {
                if ((this.mUIHacerPedidoHyperlink == null))
                {
                    this.mUIHacerPedidoHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHacerPedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHacerPedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHacerPedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHacerPedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hacer Pedido";
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProveedor";
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Pedidoes/SelectProveedor";
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Pedidoes/SelectProveedor\"";
                    this.mUIHacerPedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIHacerPedidoHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUIHacerPedidoHyperlink;
            }
        }
        
        public HtmlHyperlink UIReservasHyperlink
        {
            get
            {
                if ((this.mUIReservasHyperlink == null))
                {
                    this.mUIReservasHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Reservas\"";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIReservasHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUIReservasHyperlink;
            }
        }
        
        public HtmlHyperlink UIHabitacionesHyperlink
        {
            get
            {
                if ((this.mUIHabitacionesHyperlink == null))
                {
                    this.mUIHabitacionesHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Habitaciones";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Habitacions\"";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIHabitacionesHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUIHabitacionesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContratarMenuHyperlink;
        
        private HtmlHyperlink mUILoginHyperlink;
        
        private UILogoutFormCustom mUILogoutFormCustom;
        
        private HtmlHyperlink mUIHacerPedidoHyperlink;
        
        private HtmlHyperlink mUIReservasHyperlink;
        
        private HtmlHyperlink mUIHabitacionesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHelloealmacenhotelfbHyperlink
        {
            get
            {
                if ((this.mUIHelloealmacenhotelfbHyperlink == null))
                {
                    this.mUIHelloealmacenhotelfbHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHelloealmacenhotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHelloealmacenhotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHelloealmacenhotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHelloealmacenhotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello ealmacen@hotel.fbk!";
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage";
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Manage";
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage\"";
                    this.mUIHelloealmacenhotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHelloealmacenhotelfbHyperlink.WindowTitles.Add("Home Page - TeamCatHotel");
                    #endregion
                }
                return this.mUIHelloealmacenhotelfbHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHelloealmacenhotelfbHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelDocument : HtmlDocument
    {
        
        public UILoginTeamCatHotelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Account/Login?ReturnUrl=%2FMenus%2FContratarMenu";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIContratarMenuTeamCatDocument : HtmlDocument
    {
        
        public UIContratarMenuTeamCatDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ContratarMenu - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Menus/ContratarMenu";
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public UILogoutFormCustom1 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom1(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlEdit UINHabitacionEdit
        {
            get
            {
                if ((this.mUINHabitacionEdit == null))
                {
                    this.mUINHabitacionEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINHabitacionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUINHabitacionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "nHabitacion";
                    this.mUINHabitacionEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUINHabitacionEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINHabitacionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINHabitacionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINHabitacionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"nHabitacion\" type=\"number\" min=\"1\"";
                    this.mUINHabitacionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINHabitacionEdit.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUINHabitacionEdit;
            }
        }
        
        public HtmlInputButton UIContratarButton
        {
            get
            {
                if ((this.mUIContratarButton == null))
                {
                    this.mUIContratarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContratarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContratarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContratarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Contratar";
                    this.mUIContratarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContratarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContratarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIContratarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIContratarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIContratarButton.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarButton;
            }
        }
        
        public HtmlLabel UISuccessLabel
        {
            get
            {
                if ((this.mUISuccessLabel == null))
                {
                    this.mUISuccessLabel = new HtmlLabel(this);
                    #region Criterio de búsqueda
                    this.mUISuccessLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = null;
                    this.mUISuccessLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUISuccessLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUISuccessLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Success";
                    this.mUISuccessLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "col-md-2 control-label";
                    this.mUISuccessLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"col-md-2 control-label\"";
                    this.mUISuccessLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "3";
                    this.mUISuccessLabel.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUISuccessLabel;
            }
        }
        
        public HtmlComboBox UIMenuIdComboBox
        {
            get
            {
                if ((this.mUIMenuIdComboBox == null))
                {
                    this.mUIMenuIdComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIMenuIdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "menuId";
                    this.mUIMenuIdComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "menuId";
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"menuId\" id=\"menuId\"";
                    this.mUIMenuIdComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIMenuIdComboBox.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIMenuIdComboBox;
            }
        }
        
        public HtmlLabel UIErrorReservanotfoundLabel
        {
            get
            {
                if ((this.mUIErrorReservanotfoundLabel == null))
                {
                    this.mUIErrorReservanotfoundLabel = new HtmlLabel(this);
                    #region Criterio de búsqueda
                    this.mUIErrorReservanotfoundLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = null;
                    this.mUIErrorReservanotfoundLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIErrorReservanotfoundLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIErrorReservanotfoundLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Error: Reserva not found";
                    this.mUIErrorReservanotfoundLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "col-md-2 control-label";
                    this.mUIErrorReservanotfoundLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"col-md-2 control-label\"";
                    this.mUIErrorReservanotfoundLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "3";
                    this.mUIErrorReservanotfoundLabel.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIErrorReservanotfoundLabel;
            }
        }
        
        public HtmlComboBox UIMenuIdComboBox1
        {
            get
            {
                if ((this.mUIMenuIdComboBox1 == null))
                {
                    this.mUIMenuIdComboBox1 = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIMenuIdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "menuId";
                    this.mUIMenuIdComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "menuId";
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "4";
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"menuId\" id=\"menuId\"";
                    this.mUIMenuIdComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIMenuIdComboBox1.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIMenuIdComboBox1;
            }
        }
        
        public HtmlInputButton UIContratarButton1
        {
            get
            {
                if ((this.mUIContratarButton1 == null))
                {
                    this.mUIContratarButton1 = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContratarButton1.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContratarButton1.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContratarButton1.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Contratar";
                    this.mUIContratarButton1.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContratarButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContratarButton1.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIContratarButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIContratarButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUIContratarButton1.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarButton1;
            }
        }
        
        public HtmlLabel UIErrorOutoftimeLabel
        {
            get
            {
                if ((this.mUIErrorOutoftimeLabel == null))
                {
                    this.mUIErrorOutoftimeLabel = new HtmlLabel(this);
                    #region Criterio de búsqueda
                    this.mUIErrorOutoftimeLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = null;
                    this.mUIErrorOutoftimeLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIErrorOutoftimeLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIErrorOutoftimeLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Error: Out of time";
                    this.mUIErrorOutoftimeLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "col-md-2 control-label";
                    this.mUIErrorOutoftimeLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"col-md-2 control-label\"";
                    this.mUIErrorOutoftimeLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "3";
                    this.mUIErrorOutoftimeLabel.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIErrorOutoftimeLabel;
            }
        }
        
        public HtmlHyperlink UIContratarMenuHyperlink
        {
            get
            {
                if ((this.mUIContratarMenuHyperlink == null))
                {
                    this.mUIContratarMenuHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Contratar Menu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Menus/ContratarMenu\"";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUIContratarMenuHyperlink.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarMenuHyperlink;
            }
        }
        
        public HtmlLabel UIClienteMurielHabichuLabel
        {
            get
            {
                if ((this.mUIClienteMurielHabichuLabel == null))
                {
                    this.mUIClienteMurielHabichuLabel = new HtmlLabel(this);
                    #region Criterio de búsqueda
                    this.mUIClienteMurielHabichuLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = null;
                    this.mUIClienteMurielHabichuLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUIClienteMurielHabichuLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = null;
                    this.mUIClienteMurielHabichuLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Cliente: Muriel Habichuela Pulse de nuevo contratar para confirmar.";
                    this.mUIClienteMurielHabichuLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "col-md-2 control-label";
                    this.mUIClienteMurielHabichuLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"col-md-2 control-label\"";
                    this.mUIClienteMurielHabichuLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "3";
                    this.mUIClienteMurielHabichuLabel.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIClienteMurielHabichuLabel;
            }
        }
        
        public HtmlComboBox UIMenuIdComboBox2
        {
            get
            {
                if ((this.mUIMenuIdComboBox2 == null))
                {
                    this.mUIMenuIdComboBox2 = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIMenuIdComboBox2.SearchProperties[HtmlComboBox.PropertyNames.Id] = "menuId";
                    this.mUIMenuIdComboBox2.SearchProperties[HtmlComboBox.PropertyNames.Name] = "menuId";
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"menuId\" id=\"menuId\" data-val-requi";
                    this.mUIMenuIdComboBox2.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIMenuIdComboBox2.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIMenuIdComboBox2;
            }
        }
        
        public HtmlHyperlink UICancelHyperlink
        {
            get
            {
                if ((this.mUICancelHyperlink == null))
                {
                    this.mUICancelHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Cancel";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Menus/ContratarMenu";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Menus/ContratarMenu\"";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUICancelHyperlink.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUICancelHyperlink;
            }
        }
        
        public HtmlInputButton UIContratarButton2
        {
            get
            {
                if ((this.mUIContratarButton2 == null))
                {
                    this.mUIContratarButton2 = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContratarButton2.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContratarButton2.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContratarButton2.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Contratar";
                    this.mUIContratarButton2.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContratarButton2.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContratarButton2.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIContratarButton2.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIContratarButton2.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUIContratarButton2.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarButton2;
            }
        }
        #endregion
        
        #region Fields
        private UILogoutFormCustom1 mUILogoutFormCustom;
        
        private HtmlEdit mUINHabitacionEdit;
        
        private HtmlInputButton mUIContratarButton;
        
        private HtmlLabel mUISuccessLabel;
        
        private HtmlComboBox mUIMenuIdComboBox;
        
        private HtmlLabel mUIErrorReservanotfoundLabel;
        
        private HtmlComboBox mUIMenuIdComboBox1;
        
        private HtmlInputButton mUIContratarButton1;
        
        private HtmlLabel mUIErrorOutoftimeLabel;
        
        private HtmlHyperlink mUIContratarMenuHyperlink;
        
        private HtmlLabel mUIClienteMurielHabichuLabel;
        
        private HtmlComboBox mUIMenuIdComboBox2;
        
        private HtmlHyperlink mUICancelHyperlink;
        
        private HtmlInputButton mUIContratarButton2;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILogoutFormCustom1 : HtmlCustom
    {
        
        public UILogoutFormCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHellocamarerohotelfbHyperlink
        {
            get
            {
                if ((this.mUIHellocamarerohotelfbHyperlink == null))
                {
                    this.mUIHellocamarerohotelfbHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHellocamarerohotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHellocamarerohotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHellocamarerohotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHellocamarerohotelfbHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello camarero@hotel.fbk!";
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage";
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Manage";
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage\"";
                    this.mUIHellocamarerohotelfbHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHellocamarerohotelfbHyperlink.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIHellocamarerohotelfbHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHellocamarerohotelfbHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIGoogleDocument : HtmlDocument
    {
        
        public UIGoogleDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "gsr";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Google";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://www.google.es/?gws_rd=ssl";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISb_ifc0Pane
        {
            get
            {
                if ((this.mUISb_ifc0Pane == null))
                {
                    this.mUISb_ifc0Pane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISb_ifc0Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "sb_ifc0";
                    this.mUISb_ifc0Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISb_ifc0Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUISb_ifc0Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISb_ifc0Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sbib_b";
                    this.mUISb_ifc0Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"sbib_b\" id=\"sb_ifc0\" dir=\"ltr\"";
                    this.mUISb_ifc0Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "119";
                    this.mUISb_ifc0Pane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUISb_ifc0Pane;
            }
        }
        
        public UIFCustom UIFCustom
        {
            get
            {
                if ((this.mUIFCustom == null))
                {
                    this.mUIFCustom = new UIFCustom(this);
                }
                return this.mUIFCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISb_ifc0Pane;
        
        private UIFCustom mUIFCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIFCustom : HtmlCustom
    {
        
        public UIFCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "tsf";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "f";
            this.FilterProperties["Class"] = "tsf";
            this.FilterProperties["ControlDefinition"] = "name=\"f\" class=\"tsf\" id=\"tsf\" role=\"sear";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIGoogleInstantnoestádPane
        {
            get
            {
                if ((this.mUIGoogleInstantnoestádPane == null))
                {
                    this.mUIGoogleInstantnoestádPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIGoogleInstantnoestádPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGoogleInstantnoestádPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGoogleInstantnoestádPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Google Instant no está disponible. Pulsa";
                    this.mUIGoogleInstantnoestádPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGoogleInstantnoestádPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "sfibbbc";
                    this.mUIGoogleInstantnoestádPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"sfibbbc\"";
                    this.mUIGoogleInstantnoestádPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "106";
                    this.mUIGoogleInstantnoestádPane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIGoogleInstantnoestádPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIGoogleInstantnoestádPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelDocument1 : HtmlDocument
    {
        
        public UILoginTeamCatHotelDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Account/Login";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlEdit UIEmailEdit1
        {
            get
            {
                if ((this.mUIEmailEdit1 == null))
                {
                    this.mUIEmailEdit1 = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control input-validation-error";
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control input-v";
                    this.mUIEmailEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit1.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIEmailEdit1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlEdit mUIEmailEdit1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionComensalesTDocument : HtmlDocument
    {
        
        public UISeleccionComensalesTDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SeleccionComensales - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Menus/SeleccionComensales";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Menus/SeleccionComensales?nHabitacion=1&nCliente=Eustaquio" +
                "%20Habichuela&idServicio=2";
            this.WindowTitles.Add("SeleccionComensales - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINComensalesEdit
        {
            get
            {
                if ((this.mUINComensalesEdit == null))
                {
                    this.mUINComensalesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINComensalesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUINComensalesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "nComensales";
                    this.mUINComensalesEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUINComensalesEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINComensalesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINComensalesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINComensalesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"nComensales\" type=\"number\" min=\"1\"";
                    this.mUINComensalesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINComensalesEdit.WindowTitles.Add("SeleccionComensales - TeamCatHotel");
                    #endregion
                }
                return this.mUINComensalesEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICreateButton.WindowTitles.Add("SeleccionComensales - TeamCatHotel");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlHyperlink UICancelHyperlink
        {
            get
            {
                if ((this.mUICancelHyperlink == null))
                {
                    this.mUICancelHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICancelHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Cancel";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Menus/ContratarMenu";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Menus/ContratarMenu\"";
                    this.mUICancelHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUICancelHyperlink.WindowTitles.Add("SeleccionComensales - TeamCatHotel");
                    #endregion
                }
                return this.mUICancelHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINComensalesEdit;
        
        private HtmlInputButton mUICreateButton;
        
        private HtmlHyperlink mUICancelHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIContratarMenuTeamCatDocument1 : HtmlDocument
    {
        
        public UIContratarMenuTeamCatDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ContratarMenu - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Menus/ContratarMenu?result=Success&menu=TeamCatHotel.Model" +
                "s.Menu";
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContratarMenuHyperlink
        {
            get
            {
                if ((this.mUIContratarMenuHyperlink == null))
                {
                    this.mUIContratarMenuHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContratarMenuHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Contratar Menu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Menus/ContratarMenu";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Menus/ContratarMenu\"";
                    this.mUIContratarMenuHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUIContratarMenuHyperlink.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIContratarMenuHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContratarMenuHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndexTeamCatHotelDocument : HtmlDocument
    {
        
        public UIIndexTeamCatHotelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas";
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICrearnuevareservaHyperlink
        {
            get
            {
                if ((this.mUICrearnuevareservaHyperlink == null))
                {
                    this.mUICrearnuevareservaHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICrearnuevareservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICrearnuevareservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICrearnuevareservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICrearnuevareservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Crear nueva reserva";
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Clientes";
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Clientes";
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Clientes\"";
                    this.mUICrearnuevareservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUICrearnuevareservaHyperlink.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUICrearnuevareservaHyperlink;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Reservas/Delete/1002";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Reservas/Delete/1002";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Reservas/Delete/1002\"";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "22";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICrearnuevareservaHyperlink;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "AddressDisplay Control";
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public UIBarradedireccionesClient UIBarradedireccionesClient
        {
            get
            {
                if ((this.mUIBarradedireccionesClient == null))
                {
                    this.mUIBarradedireccionesClient = new UIBarradedireccionesClient(this);
                }
                return this.mUIBarradedireccionesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIBarradedireccionesClient mUIBarradedireccionesClient;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIBarradedireccionesClient : WinClient
    {
        
        public UIBarradedireccionesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.WindowTitles.Add("ContratarMenu - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDirecciónEdit
        {
            get
            {
                if ((this.mUIDirecciónEdit == null))
                {
                    this.mUIDirecciónEdit = new WinEdit(this);
                    #region Criterio de búsqueda
                    this.mUIDirecciónEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Dirección";
                    this.mUIDirecciónEdit.WindowTitles.Add("ContratarMenu - TeamCatHotel");
                    #endregion
                }
                return this.mUIDirecciónEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDirecciónEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelDocument2 : HtmlDocument
    {
        
        public UILoginTeamCatHotelDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Account/Login?ReturnUrl=%2FHabitacions";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIItemCustom.SearchProperties["TagName"] = "FORM";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "form-horizontal";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"form-horizontal\" action=\"/Account";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlButton mUILoginButton;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemCustom : HtmlCustom
    {
        
        public UIItemCustom()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Internet Explorer_Server";
            #endregion
        }
        
        #region Properties
        public UIHttplocalhost21013MeDocument UIHttplocalhost21013MeDocument
        {
            get
            {
                if ((this.mUIHttplocalhost21013MeDocument == null))
                {
                    this.mUIHttplocalhost21013MeDocument = new UIHttplocalhost21013MeDocument(this);
                }
                return this.mUIHttplocalhost21013MeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttplocalhost21013MeDocument mUIHttplocalhost21013MeDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIHttplocalhost21013MeDocument : HtmlDocument
    {
        
        public UIHttplocalhost21013MeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Menus/ContratarMenu";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Menus/ContratarMenu";
            #endregion
        }
        
        #region Properties
        public HtmlListItem UIItemListItem
        {
            get
            {
                if ((this.mUIItemListItem == null))
                {
                    this.mUIItemListItem = new HtmlListItem(this);
                    #region Criterio de búsqueda
                    this.mUIItemListItem.SearchProperties[HtmlListItem.PropertyNames.Id] = null;
                    this.mUIItemListItem.SearchProperties[HtmlListItem.PropertyNames.Name] = null;
                    this.mUIItemListItem.SearchProperties[HtmlListItem.PropertyNames.InnerText] = "Desayuno";
                    this.mUIItemListItem.FilterProperties[HtmlListItem.PropertyNames.Title] = null;
                    this.mUIItemListItem.FilterProperties[HtmlListItem.PropertyNames.Class] = null;
                    this.mUIItemListItem.FilterProperties[HtmlListItem.PropertyNames.ControlDefinition] = null;
                    this.mUIItemListItem.FilterProperties[HtmlListItem.PropertyNames.TagInstance] = "1";
                    #endregion
                }
                return this.mUIItemListItem;
            }
        }
        #endregion
        
        #region Fields
        private HtmlListItem mUIItemListItem;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIniciarWindow : WinWindow
    {
        
        public UIIniciarWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Iniciar";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Start";
            this.WindowTitles.Add("Iniciar");
            #endregion
        }
        
        #region Properties
        public WinButton UIIniciarButton
        {
            get
            {
                if ((this.mUIIniciarButton == null))
                {
                    this.mUIIniciarButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIIniciarButton.SearchProperties[WinButton.PropertyNames.Name] = "Iniciar";
                    this.mUIIniciarButton.WindowTitles.Add("Iniciar");
                    #endregion
                }
                return this.mUIIniciarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIIniciarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProveedorWindow : BrowserWindow
    {
        
        public UISeleccionarProveedorWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccionar Proveedor - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionarProveedorDocument UISeleccionarProveedorDocument
        {
            get
            {
                if ((this.mUISeleccionarProveedorDocument == null))
                {
                    this.mUISeleccionarProveedorDocument = new UISeleccionarProveedorDocument(this);
                }
                return this.mUISeleccionarProveedorDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionarProveedorDocument mUISeleccionarProveedorDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProveedorDocument : HtmlDocument
    {
        
        public UISeleccionarProveedorDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccionar Proveedor - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProveedor";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Pedidoes/SelectProveedor";
            this.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIIdProveedorComboBox
        {
            get
            {
                if ((this.mUIIdProveedorComboBox == null))
                {
                    this.mUIIdProveedorComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdProveedorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "idProveedor";
                    this.mUIIdProveedorComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "idProveedor";
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"idProveedor\" class=\"form-control\" ";
                    this.mUIIdProveedorComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIIdProveedorComboBox.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
                    #endregion
                }
                return this.mUIIdProveedorComboBox;
            }
        }
        
        public HtmlButton UISeleccionarProductosButton
        {
            get
            {
                if ((this.mUISeleccionarProductosButton == null))
                {
                    this.mUISeleccionarProductosButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUISeleccionarProductosButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISeleccionarProductosButton.SearchProperties[HtmlButton.PropertyNames.Name] = "boton";
                    this.mUISeleccionarProductosButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " Seleccionar Productos";
                    this.mUISeleccionarProductosButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISeleccionarProductosButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISeleccionarProductosButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUISeleccionarProductosButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"boton\" class=\"btn btn-primary\" typ";
                    this.mUISeleccionarProductosButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISeleccionarProductosButton.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
                    #endregion
                }
                return this.mUISeleccionarProductosButton;
            }
        }
        
        public HtmlComboBox UIIdProveedorComboBox1
        {
            get
            {
                if ((this.mUIIdProveedorComboBox1 == null))
                {
                    this.mUIIdProveedorComboBox1 = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdProveedorComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "idProveedor";
                    this.mUIIdProveedorComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "idProveedor";
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control valid";
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"idProveedor\" class=\"form-control v";
                    this.mUIIdProveedorComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIIdProveedorComboBox1.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
                    #endregion
                }
                return this.mUIIdProveedorComboBox1;
            }
        }
        
        public HtmlCustom UIErrorElproveedorseleCustom
        {
            get
            {
                if ((this.mUIErrorElproveedorseleCustom == null))
                {
                    this.mUIErrorElproveedorseleCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIErrorElproveedorseleCustom.SearchProperties["TagName"] = "LI";
                    this.mUIErrorElproveedorseleCustom.SearchProperties["Id"] = null;
                    this.mUIErrorElproveedorseleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIErrorElproveedorseleCustom.FilterProperties["Class"] = null;
                    this.mUIErrorElproveedorseleCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIErrorElproveedorseleCustom.FilterProperties["InnerText"] = "Error. El proveedor seleccionado no tien";
                    this.mUIErrorElproveedorseleCustom.FilterProperties["TagInstance"] = "13";
                    this.mUIErrorElproveedorseleCustom.WindowTitles.Add("Seleccionar Proveedor - TeamCatHotel");
                    #endregion
                }
                return this.mUIErrorElproveedorseleCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIIdProveedorComboBox;
        
        private HtmlButton mUISeleccionarProductosButton;
        
        private HtmlComboBox mUIIdProveedorComboBox1;
        
        private HtmlCustom mUIErrorElproveedorseleCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosWindow : BrowserWindow
    {
        
        public UISeleccionarProductosWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccionar Productos - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionarProductosDocument UISeleccionarProductosDocument
        {
            get
            {
                if ((this.mUISeleccionarProductosDocument == null))
                {
                    this.mUISeleccionarProductosDocument = new UISeleccionarProductosDocument(this);
                }
                return this.mUISeleccionarProductosDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionarProductosDocument mUISeleccionarProductosDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosDocument : HtmlDocument
    {
        
        public UISeleccionarProductosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccionar Productos - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProductos";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Pedidoes/SelectProductos?idProveedor=1&noProductosSeleccio" +
                "nados=False&noPositivo=False&mayorCien=False";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIListaCantidadesEdit
        {
            get
            {
                if ((this.mUIListaCantidadesEdit == null))
                {
                    this.mUIListaCantidadesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIListaCantidadesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "listaCantidades";
                    this.mUIListaCantidadesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "listaCantidades";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"listaCantidades\" class=\"form-contr";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIListaCantidadesEdit.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIListaCantidadesEdit;
            }
        }
        
        public HtmlButton UIVerresumenButton
        {
            get
            {
                if ((this.mUIVerresumenButton == null))
                {
                    this.mUIVerresumenButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Name] = "boton";
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Ver resumen";
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"boton\" class=\"btn btn-primary\" typ";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIVerresumenButton.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIVerresumenButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIListaCantidadesEdit;
        
        private HtmlButton mUIVerresumenButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIConfirmarPedidoTeamCWindow : BrowserWindow
    {
        
        public UIConfirmarPedidoTeamCWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Confirmar Pedido - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIConfirmarPedidoTeamCDocument UIConfirmarPedidoTeamCDocument
        {
            get
            {
                if ((this.mUIConfirmarPedidoTeamCDocument == null))
                {
                    this.mUIConfirmarPedidoTeamCDocument = new UIConfirmarPedidoTeamCDocument(this);
                }
                return this.mUIConfirmarPedidoTeamCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIConfirmarPedidoTeamCDocument mUIConfirmarPedidoTeamCDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIConfirmarPedidoTeamCDocument : HtmlDocument
    {
        
        public UIConfirmarPedidoTeamCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Confirmar Pedido - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Pedidoes/ResumenPedido";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Pedidoes/ResumenPedido?listaCantidades=1&listaCantidades=0" +
                "&listaCantidades=0&IdsProductosSeleccionados=1&IdsProductosSeleccionados=2&IdsPr" +
                "oductosSeleccionados=3&idProveedor=1";
            this.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UIItemTable1 UIItemTable1
        {
            get
            {
                if ((this.mUIItemTable1 == null))
                {
                    this.mUIItemTable1 = new UIItemTable1(this);
                }
                return this.mUIItemTable1;
            }
        }
        
        public HtmlButton UIRealizarpedidoButton
        {
            get
            {
                if ((this.mUIRealizarpedidoButton == null))
                {
                    this.mUIRealizarpedidoButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIRealizarpedidoButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIRealizarpedidoButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIRealizarpedidoButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Realizar pedido";
                    this.mUIRealizarpedidoButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIRealizarpedidoButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIRealizarpedidoButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIRealizarpedidoButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIRealizarpedidoButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIRealizarpedidoButton.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
                    #endregion
                }
                return this.mUIRealizarpedidoButton;
            }
        }
        
        public HtmlHyperlink UICancelarpedidoHyperlink
        {
            get
            {
                if ((this.mUICancelarpedidoHyperlink == null))
                {
                    this.mUICancelarpedidoHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICancelarpedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICancelarpedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICancelarpedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICancelarpedidoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Cancelar pedido";
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProveedor";
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Pedidoes/SelectProveedor";
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-primary";
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" href=\"/Pedidoes/";
                    this.mUICancelarpedidoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUICancelarpedidoHyperlink.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
                    #endregion
                }
                return this.mUICancelarpedidoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        
        private UIItemTable1 mUIItemTable1;
        
        private HtmlButton mUIRealizarpedidoButton;
        
        private HtmlHyperlink mUICancelarpedidoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre \r\n\r\nPais \r\n\r\nProvincia \r\n\r\nLocali";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIPedroSLCell
        {
            get
            {
                if ((this.mUIPedroSLCell == null))
                {
                    this.mUIPedroSLCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIPedroSLCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIPedroSLCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIPedroSLCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIPedroSLCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "PedroSL  ";
                    this.mUIPedroSLCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIPedroSLCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIPedroSLCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIPedroSLCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIPedroSLCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIPedroSLCell.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
                    #endregion
                }
                return this.mUIPedroSLCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIPedroSLCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre \r\n\r\nCantidad \r\n\r\nPrecio \r\n\r\n\r\nToa";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIToallaCell
        {
            get
            {
                if ((this.mUIToallaCell == null))
                {
                    this.mUIToallaCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIToallaCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIToallaCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIToallaCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIToallaCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Toalla  ";
                    this.mUIToallaCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIToallaCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIToallaCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIToallaCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIToallaCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUIToallaCell.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
                    #endregion
                }
                return this.mUIToallaCell;
            }
        }
        
        public HtmlCell UIItem1Cell
        {
            get
            {
                if ((this.mUIItem1Cell == null))
                {
                    this.mUIItem1Cell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIItem1Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem1Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem1Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem1Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "1  ";
                    this.mUIItem1Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem1Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIItem1Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIItem1Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem1Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "9";
                    this.mUIItem1Cell.WindowTitles.Add("Confirmar Pedido - TeamCatHotel");
                    #endregion
                }
                return this.mUIItem1Cell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIToallaCell;
        
        private HtmlCell mUIItem1Cell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosWindow1 : BrowserWindow
    {
        
        public UISeleccionarProductosWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccionar Productos - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionarProductosDocument1 UISeleccionarProductosDocument
        {
            get
            {
                if ((this.mUISeleccionarProductosDocument == null))
                {
                    this.mUISeleccionarProductosDocument = new UISeleccionarProductosDocument1(this);
                }
                return this.mUISeleccionarProductosDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionarProductosDocument1 mUISeleccionarProductosDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosDocument1 : HtmlDocument
    {
        
        public UISeleccionarProductosDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccionar Productos - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProductos";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Pedidoes/SelectProductos?idProveedor=1&noProductosSeleccio" +
                "nados=False&noPositivo=True&mayorCien=False";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIErrorLacantidadnopueCustom
        {
            get
            {
                if ((this.mUIErrorLacantidadnopueCustom == null))
                {
                    this.mUIErrorLacantidadnopueCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIErrorLacantidadnopueCustom.SearchProperties["TagName"] = "LI";
                    this.mUIErrorLacantidadnopueCustom.SearchProperties["Id"] = null;
                    this.mUIErrorLacantidadnopueCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["Class"] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["InnerText"] = "Error. La cantidad no puede ser menor qu";
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["TagInstance"] = "13";
                    this.mUIErrorLacantidadnopueCustom.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIErrorLacantidadnopueCustom;
            }
        }
        
        public HtmlEdit UIListaCantidadesEdit
        {
            get
            {
                if ((this.mUIListaCantidadesEdit == null))
                {
                    this.mUIListaCantidadesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIListaCantidadesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "listaCantidades";
                    this.mUIListaCantidadesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "listaCantidades";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control valid";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"listaCantidades\" class=\"form-contr";
                    this.mUIListaCantidadesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIListaCantidadesEdit.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIListaCantidadesEdit;
            }
        }
        
        public HtmlButton UIVerresumenButton
        {
            get
            {
                if ((this.mUIVerresumenButton == null))
                {
                    this.mUIVerresumenButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Name] = "boton";
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Ver resumen";
                    this.mUIVerresumenButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"boton\" class=\"btn btn-primary\" typ";
                    this.mUIVerresumenButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIVerresumenButton.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIVerresumenButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIErrorLacantidadnopueCustom;
        
        private HtmlEdit mUIListaCantidadesEdit;
        
        private HtmlButton mUIVerresumenButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosWindow2 : BrowserWindow
    {
        
        public UISeleccionarProductosWindow2()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccionar Productos - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionarProductosDocument2 UISeleccionarProductosDocument
        {
            get
            {
                if ((this.mUISeleccionarProductosDocument == null))
                {
                    this.mUISeleccionarProductosDocument = new UISeleccionarProductosDocument2(this);
                }
                return this.mUISeleccionarProductosDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionarProductosDocument2 mUISeleccionarProductosDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosDocument2 : HtmlDocument
    {
        
        public UISeleccionarProductosDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccionar Productos - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Pedidoes/SelectProductos";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Pedidoes/SelectProductos?idProveedor=1&noProductosSeleccio" +
                "nados=False&noPositivo=False&mayorCien=True";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIErrorLacantidadnopueCustom
        {
            get
            {
                if ((this.mUIErrorLacantidadnopueCustom == null))
                {
                    this.mUIErrorLacantidadnopueCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIErrorLacantidadnopueCustom.SearchProperties["TagName"] = "LI";
                    this.mUIErrorLacantidadnopueCustom.SearchProperties["Id"] = null;
                    this.mUIErrorLacantidadnopueCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["Class"] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["InnerText"] = "Error. La cantidad no puede ser mayor qu";
                    this.mUIErrorLacantidadnopueCustom.FilterProperties["TagInstance"] = "13";
                    this.mUIErrorLacantidadnopueCustom.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUIErrorLacantidadnopueCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIErrorLacantidadnopueCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosWindow3 : BrowserWindow
    {
        
        public UISeleccionarProductosWindow3()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccionar Productos - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionarProductosTitleBar UISeleccionarProductosTitleBar
        {
            get
            {
                if ((this.mUISeleccionarProductosTitleBar == null))
                {
                    this.mUISeleccionarProductosTitleBar = new UISeleccionarProductosTitleBar(this);
                }
                return this.mUISeleccionarProductosTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionarProductosTitleBar mUISeleccionarProductosTitleBar;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UISeleccionarProductosTitleBar : WinTitleBar
    {
        
        public UISeleccionarProductosTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Seleccionar Productos - TeamCatHotel");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatWindow : BrowserWindow
    {
        
        public UIIndiceClienteTeamCatWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Indice Cliente - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            this.WindowTitles.Add("Delete - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndiceClienteTeamCatDocument UIIndiceClienteTeamCatDocument
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatDocument == null))
                {
                    this.mUIIndiceClienteTeamCatDocument = new UIIndiceClienteTeamCatDocument(this);
                }
                return this.mUIIndiceClienteTeamCatDocument;
            }
        }
        
        public UIIndiceClienteTeamCatDocument1 UIIndiceClienteTeamCatDocument1
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatDocument1 == null))
                {
                    this.mUIIndiceClienteTeamCatDocument1 = new UIIndiceClienteTeamCatDocument1(this);
                }
                return this.mUIIndiceClienteTeamCatDocument1;
            }
        }
        
        public UIFiladepestañasTabList UIFiladepestañasTabList
        {
            get
            {
                if ((this.mUIFiladepestañasTabList == null))
                {
                    this.mUIFiladepestañasTabList = new UIFiladepestañasTabList(this);
                }
                return this.mUIFiladepestañasTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIIndiceClienteTeamCatDocument mUIIndiceClienteTeamCatDocument;
        
        private UIIndiceClienteTeamCatDocument1 mUIIndiceClienteTeamCatDocument1;
        
        private UIFiladepestañasTabList mUIFiladepestañasTabList;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatDocument : HtmlDocument
    {
        
        public UIIndiceClienteTeamCatDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Indice Cliente - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Clientes";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Clientes";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINIFEdit
        {
            get
            {
                if ((this.mUINIFEdit == null))
                {
                    this.mUINIFEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINIFEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUINIFEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "NIF";
                    this.mUINIFEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUINIFEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINIFEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINIFEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINIFEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"NIF\" type=\"text\"";
                    this.mUINIFEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINIFEdit.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUINIFEdit;
            }
        }
        
        public HtmlInputButton UIFilterButton
        {
            get
            {
                if ((this.mUIFilterButton == null))
                {
                    this.mUIFilterButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIFilterButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIFilterButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIFilterButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Filter";
                    this.mUIFilterButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIFilterButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIFilterButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIFilterButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "type=\"submit\" value=\"Filter\"";
                    this.mUIFilterButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIFilterButton.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIFilterButton;
            }
        }
        
        public HtmlHyperlink UIReservasHyperlink
        {
            get
            {
                if ((this.mUIReservasHyperlink == null))
                {
                    this.mUIReservasHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReservasHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Reservas";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Reservas\"";
                    this.mUIReservasHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIReservasHyperlink.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIReservasHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINIFEdit;
        
        private HtmlInputButton mUIFilterButton;
        
        private HtmlHyperlink mUIReservasHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatDocument1 : HtmlDocument
    {
        
        public UIIndiceClienteTeamCatDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Indice Cliente - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Clientes";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Clientes?NIF=12345678K";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Clientes/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Clientes/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Clientes/Details/1\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "16";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public UIItemTable2 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable2(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private UIItemTable2 mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemTable2 : HtmlTable
    {
        
        public UIItemTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "apellidos \r\n\r\ncodigoPostal \r\n\r\ncorreoEle";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "12";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIItem12345678KCell
        {
            get
            {
                if ((this.mUIItem12345678KCell == null))
                {
                    this.mUIItem12345678KCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIItem12345678KCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIItem12345678KCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIItem12345678KCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIItem12345678KCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "12345678K ";
                    this.mUIItem12345678KCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIItem12345678KCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIItem12345678KCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "5";
                    this.mUIItem12345678KCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIItem12345678KCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "6";
                    this.mUIItem12345678KCell.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIItem12345678KCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIItem12345678KCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIFiladepestañasTabList : WinTabList
    {
        
        public UIFiladepestañasTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Fila de pestañas";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIIndiceClienteTeamCatTabPage
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatTabPage == null))
                {
                    this.mUIIndiceClienteTeamCatTabPage = new WinTabPage(this);
                    #region Criterio de búsqueda
                    this.mUIIndiceClienteTeamCatTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Indice Cliente - TeamCatHotel";
                    this.mUIIndiceClienteTeamCatTabPage.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIIndiceClienteTeamCatTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIIndiceClienteTeamCatTabPage;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelIWindow : BrowserWindow
    {
        
        public UIDetailsTeamCatHotelIWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details - TeamCatHotel");
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsTeamCatHotelDocument UIDetailsTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelDocument == null))
                {
                    this.mUIDetailsTeamCatHotelDocument = new UIDetailsTeamCatHotelDocument(this);
                }
                return this.mUIDetailsTeamCatHotelDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsTeamCatHotelDocument mUIDetailsTeamCatHotelDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelDocument : HtmlDocument
    {
        
        public UIDetailsTeamCatHotelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Clientes/Details/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Clientes/Details/1";
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHacerReservaHyperlink
        {
            get
            {
                if ((this.mUIHacerReservaHyperlink == null))
                {
                    this.mUIHacerReservaHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHacerReservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHacerReservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHacerReservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHacerReservaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hacer Reserva";
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Reservas/vistaDatosReserva/1";
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Reservas/vistaDatosReserva/1";
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Reservas/vistaDatosReserva/1\"";
                    this.mUIHacerReservaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUIHacerReservaHyperlink.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIHacerReservaHyperlink;
            }
        }
        
        public HtmlCustom UIItem12345678KCustom
        {
            get
            {
                if ((this.mUIItem12345678KCustom == null))
                {
                    this.mUIItem12345678KCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIItem12345678KCustom.SearchProperties["TagName"] = "DD";
                    this.mUIItem12345678KCustom.SearchProperties["Id"] = null;
                    this.mUIItem12345678KCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItem12345678KCustom.FilterProperties["Class"] = null;
                    this.mUIItem12345678KCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItem12345678KCustom.FilterProperties["InnerText"] = "12345678K ";
                    this.mUIItem12345678KCustom.FilterProperties["TagInstance"] = "6";
                    this.mUIItem12345678KCustom.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIItem12345678KCustom;
            }
        }
        
        public HtmlCustom UIEustaquioCustom
        {
            get
            {
                if ((this.mUIEustaquioCustom == null))
                {
                    this.mUIEustaquioCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIEustaquioCustom.SearchProperties["TagName"] = "DD";
                    this.mUIEustaquioCustom.SearchProperties["Id"] = null;
                    this.mUIEustaquioCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIEustaquioCustom.FilterProperties["Class"] = null;
                    this.mUIEustaquioCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIEustaquioCustom.FilterProperties["InnerText"] = "Eustaquio ";
                    this.mUIEustaquioCustom.FilterProperties["TagInstance"] = "7";
                    this.mUIEustaquioCustom.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIEustaquioCustom;
            }
        }
        
        public HtmlCustom UIHabichuelaCustom
        {
            get
            {
                if ((this.mUIHabichuelaCustom == null))
                {
                    this.mUIHabichuelaCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIHabichuelaCustom.SearchProperties["TagName"] = "DD";
                    this.mUIHabichuelaCustom.SearchProperties["Id"] = null;
                    this.mUIHabichuelaCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIHabichuelaCustom.FilterProperties["Class"] = null;
                    this.mUIHabichuelaCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIHabichuelaCustom.FilterProperties["InnerText"] = "Habichuela ";
                    this.mUIHabichuelaCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIHabichuelaCustom.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIHabichuelaCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHacerReservaHyperlink;
        
        private HtmlCustom mUIItem12345678KCustom;
        
        private HtmlCustom mUIEustaquioCustom;
        
        private HtmlCustom mUIHabichuelaCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResWindow : BrowserWindow
    {
        
        public UINuevaReservaDatosResWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINuevaReservaDatosResDocument UINuevaReservaDatosResDocument
        {
            get
            {
                if ((this.mUINuevaReservaDatosResDocument == null))
                {
                    this.mUINuevaReservaDatosResDocument = new UINuevaReservaDatosResDocument(this);
                }
                return this.mUINuevaReservaDatosResDocument;
            }
        }
        
        public UINuevaReservaDatosResDocument1 UINuevaReservaDatosResDocument1
        {
            get
            {
                if ((this.mUINuevaReservaDatosResDocument1 == null))
                {
                    this.mUINuevaReservaDatosResDocument1 = new UINuevaReservaDatosResDocument1(this);
                }
                return this.mUINuevaReservaDatosResDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UINuevaReservaDatosResDocument mUINuevaReservaDatosResDocument;
        
        private UINuevaReservaDatosResDocument1 mUINuevaReservaDatosResDocument1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResDocument : HtmlDocument
    {
        
        public UINuevaReservaDatosResDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/vistaDatosReserva/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/vistaDatosReserva/1";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    this.mUIContinuarButton.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        
        public HtmlEdit UIFechaInicioEdit
        {
            get
            {
                if ((this.mUIFechaInicioEdit == null))
                {
                    this.mUIFechaInicioEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechaInicioEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaInicio";
                    this.mUIFechaInicioEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaInicio";
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha Inicio:";
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control valid";
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaInicio\" class=\"form-control v";
                    this.mUIFechaInicioEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIFechaInicioEdit.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechaInicioEdit;
            }
        }
        
        public HtmlEdit UIFechaFinEdit
        {
            get
            {
                if ((this.mUIFechaFinEdit == null))
                {
                    this.mUIFechaFinEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechaFinEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaFin";
                    this.mUIFechaFinEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaFin";
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha Fin:";
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control valid";
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaFin\" class=\"form-control vali";
                    this.mUIFechaFinEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIFechaFinEdit.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechaFinEdit;
            }
        }
        
        public HtmlComboBox UIRegimendecomidasComboBox
        {
            get
            {
                if ((this.mUIRegimendecomidasComboBox == null))
                {
                    this.mUIRegimendecomidasComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIRegimendecomidasComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "regimenComida";
                    this.mUIRegimendecomidasComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "regimenComida";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Regimen de comidas:";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control input-validation-error";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"regimenComida\" class=\"form-control";
                    this.mUIRegimendecomidasComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIRegimendecomidasComboBox.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIRegimendecomidasComboBox;
            }
        }
        
        public HtmlEdit UIComentariosobrelaresEdit
        {
            get
            {
                if ((this.mUIComentariosobrelaresEdit == null))
                {
                    this.mUIComentariosobrelaresEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIComentariosobrelaresEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "comentarios";
                    this.mUIComentariosobrelaresEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "comentarios";
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Comentario sobre la reserva:";
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control valid";
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"comentarios\" class=\"form-control v";
                    this.mUIComentariosobrelaresEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIComentariosobrelaresEdit.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIComentariosobrelaresEdit;
            }
        }
        
        public HtmlEdit UIFechaInicioEdit1
        {
            get
            {
                if ((this.mUIFechaInicioEdit1 == null))
                {
                    this.mUIFechaInicioEdit1 = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechaInicioEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaInicio";
                    this.mUIFechaInicioEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaInicio";
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha Inicio:";
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaInicio\" class=\"form-control\" ";
                    this.mUIFechaInicioEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIFechaInicioEdit1.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechaInicioEdit1;
            }
        }
        
        public HtmlEdit UIFechaFinEdit1
        {
            get
            {
                if ((this.mUIFechaFinEdit1 == null))
                {
                    this.mUIFechaFinEdit1 = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechaFinEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaFin";
                    this.mUIFechaFinEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaFin";
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha Fin:";
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaFin\" class=\"form-control\" id=";
                    this.mUIFechaFinEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIFechaFinEdit1.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechaFinEdit1;
            }
        }
        
        public HtmlComboBox UIRegimendecomidasComboBox1
        {
            get
            {
                if ((this.mUIRegimendecomidasComboBox1 == null))
                {
                    this.mUIRegimendecomidasComboBox1 = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIRegimendecomidasComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Id] = "regimenComida";
                    this.mUIRegimendecomidasComboBox1.SearchProperties[HtmlComboBox.PropertyNames.Name] = "regimenComida";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Regimen de comidas:";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"regimenComida\" class=\"form-control";
                    this.mUIRegimendecomidasComboBox1.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIRegimendecomidasComboBox1.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIRegimendecomidasComboBox1;
            }
        }
        
        public HtmlEdit UIComentariosobrelaresEdit1
        {
            get
            {
                if ((this.mUIComentariosobrelaresEdit1 == null))
                {
                    this.mUIComentariosobrelaresEdit1 = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIComentariosobrelaresEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "comentarios";
                    this.mUIComentariosobrelaresEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "comentarios";
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Comentario sobre la reserva:";
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"comentarios\" class=\"form-control\" ";
                    this.mUIComentariosobrelaresEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIComentariosobrelaresEdit1.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIComentariosobrelaresEdit1;
            }
        }
        
        public HtmlCustom UIOopsposiblementehacoCustom
        {
            get
            {
                if ((this.mUIOopsposiblementehacoCustom == null))
                {
                    this.mUIOopsposiblementehacoCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIOopsposiblementehacoCustom.SearchProperties["TagName"] = "LI";
                    this.mUIOopsposiblementehacoCustom.SearchProperties["Id"] = null;
                    this.mUIOopsposiblementehacoCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIOopsposiblementehacoCustom.FilterProperties["Class"] = null;
                    this.mUIOopsposiblementehacoCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIOopsposiblementehacoCustom.FilterProperties["InnerText"] = "Oops, posiblemente ha confundido la Fech";
                    this.mUIOopsposiblementehacoCustom.FilterProperties["TagInstance"] = "13";
                    this.mUIOopsposiblementehacoCustom.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIOopsposiblementehacoCustom;
            }
        }
        
        public HtmlCustom UIOopslasfechasintroduCustom
        {
            get
            {
                if ((this.mUIOopslasfechasintroduCustom == null))
                {
                    this.mUIOopslasfechasintroduCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIOopslasfechasintroduCustom.SearchProperties["TagName"] = "LI";
                    this.mUIOopslasfechasintroduCustom.SearchProperties["Id"] = null;
                    this.mUIOopslasfechasintroduCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIOopslasfechasintroduCustom.FilterProperties["Class"] = null;
                    this.mUIOopslasfechasintroduCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIOopslasfechasintroduCustom.FilterProperties["InnerText"] = "Oops, las fechas introducidas no pueden ";
                    this.mUIOopslasfechasintroduCustom.FilterProperties["TagInstance"] = "13";
                    this.mUIOopslasfechasintroduCustom.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIOopslasfechasintroduCustom;
            }
        }
        
        public HtmlCustom UINohayhabitacionesdisCustom
        {
            get
            {
                if ((this.mUINohayhabitacionesdisCustom == null))
                {
                    this.mUINohayhabitacionesdisCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUINohayhabitacionesdisCustom.SearchProperties["TagName"] = "LI";
                    this.mUINohayhabitacionesdisCustom.SearchProperties["Id"] = null;
                    this.mUINohayhabitacionesdisCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUINohayhabitacionesdisCustom.FilterProperties["Class"] = null;
                    this.mUINohayhabitacionesdisCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUINohayhabitacionesdisCustom.FilterProperties["InnerText"] = "No hay habitaciones disponibles con las ";
                    this.mUINohayhabitacionesdisCustom.FilterProperties["TagInstance"] = "13";
                    this.mUINohayhabitacionesdisCustom.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUINohayhabitacionesdisCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIContinuarButton;
        
        private HtmlEdit mUIFechaInicioEdit;
        
        private HtmlEdit mUIFechaFinEdit;
        
        private HtmlComboBox mUIRegimendecomidasComboBox;
        
        private HtmlEdit mUIComentariosobrelaresEdit;
        
        private HtmlEdit mUIFechaInicioEdit1;
        
        private HtmlEdit mUIFechaFinEdit1;
        
        private HtmlComboBox mUIRegimendecomidasComboBox1;
        
        private HtmlEdit mUIComentariosobrelaresEdit1;
        
        private HtmlCustom mUIOopsposiblementehacoCustom;
        
        private HtmlCustom mUIOopslasfechasintroduCustom;
        
        private HtmlCustom mUINohayhabitacionesdisCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResDocument1 : HtmlDocument
    {
        
        public UINuevaReservaDatosResDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/vistaSeleccionHabitacionReserva";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/vistaSeleccionHabitacionReserva?nif=12345678K&nom" +
                "bre=Eustaquio&apellidos=Habichuela&idPersona=1&fechaInicio=12%2F17%2F2016%2000%3" +
                "A00%3A00&fechaFin=12%2F18%2F2016%2000%3A00%3A00&comentarios=Yeeee&regimenComida=" +
                "1";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlRadioButton UIDescuentoSeleccionadRadioButton
        {
            get
            {
                if ((this.mUIDescuentoSeleccionadRadioButton == null))
                {
                    this.mUIDescuentoSeleccionadRadioButton = new HtmlRadioButton(this);
                    #region Criterio de búsqueda
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "descuentoSeleccionado";
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "1";
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "1";
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"descuentoSeleccionado\" type=\"radio";
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "10";
                    this.mUIDescuentoSeleccionadRadioButton.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIDescuentoSeleccionadRadioButton;
            }
        }
        
        public HtmlCheckBox UIHabitacionesSeleccioCheckBox
        {
            get
            {
                if ((this.mUIHabitacionesSeleccioCheckBox == null))
                {
                    this.mUIHabitacionesSeleccioCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "habitacionesSeleccionadas";
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "3";
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"habitacionesSeleccionadas\" type=\"c";
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUIHabitacionesSeleccioCheckBox.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIHabitacionesSeleccioCheckBox;
            }
        }
        
        public HtmlButton UIGuardarReservaButton
        {
            get
            {
                if ((this.mUIGuardarReservaButton == null))
                {
                    this.mUIGuardarReservaButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Guardar Reserva";
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIGuardarReservaButton.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIGuardarReservaButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlRadioButton mUIDescuentoSeleccionadRadioButton;
        
        private HtmlCheckBox mUIHabitacionesSeleccioCheckBox;
        
        private HtmlButton mUIGuardarReservaButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatWindow1 : BrowserWindow
    {
        
        public UIIndiceClienteTeamCatWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Indice Cliente - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            this.WindowTitles.Add("Details - TeamCatHotel");
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINuevaReservaDatosResDocument2 UINuevaReservaDatosResDocument
        {
            get
            {
                if ((this.mUINuevaReservaDatosResDocument == null))
                {
                    this.mUINuevaReservaDatosResDocument = new UINuevaReservaDatosResDocument2(this);
                }
                return this.mUINuevaReservaDatosResDocument;
            }
        }
        #endregion
        
        #region Fields
        private UINuevaReservaDatosResDocument2 mUINuevaReservaDatosResDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResDocument2 : HtmlDocument
    {
        
        public UINuevaReservaDatosResDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/vistaSeleccionHabitacionReserva";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/vistaSeleccionHabitacionReserva?nif=12345678K&nom" +
                "bre=Eustaquio&apellidos=Habichuela&idPersona=1&fechaInicio=12%2F17%2F2016%2000%3" +
                "A00%3A00&fechaFin=12%2F18%2F2016%2000%3A00%3A00&regimenComida=1";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlRadioButton UIDescuentoSeleccionadRadioButton
        {
            get
            {
                if ((this.mUIDescuentoSeleccionadRadioButton == null))
                {
                    this.mUIDescuentoSeleccionadRadioButton = new HtmlRadioButton(this);
                    #region Criterio de búsqueda
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = null;
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "descuentoSeleccionado";
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Value] = "1";
                    this.mUIDescuentoSeleccionadRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.LabeledBy] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "1";
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = null;
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"descuentoSeleccionado\" type=\"radio";
                    this.mUIDescuentoSeleccionadRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "10";
                    this.mUIDescuentoSeleccionadRadioButton.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIDescuentoSeleccionadRadioButton;
            }
        }
        
        public HtmlCheckBox UIHabitacionesSeleccioCheckBox
        {
            get
            {
                if ((this.mUIHabitacionesSeleccioCheckBox == null))
                {
                    this.mUIHabitacionesSeleccioCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "habitacionesSeleccionadas";
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "3";
                    this.mUIHabitacionesSeleccioCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"habitacionesSeleccionadas\" type=\"c";
                    this.mUIHabitacionesSeleccioCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "11";
                    this.mUIHabitacionesSeleccioCheckBox.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIHabitacionesSeleccioCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlRadioButton mUIDescuentoSeleccionadRadioButton;
        
        private HtmlCheckBox mUIHabitacionesSeleccioCheckBox;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatWindow2 : BrowserWindow
    {
        
        public UIIndiceClienteTeamCatWindow2()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Indice Cliente - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            this.WindowTitles.Add("Delete - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDeleteTeamCatHotelDocument UIDeleteTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIDeleteTeamCatHotelDocument == null))
                {
                    this.mUIDeleteTeamCatHotelDocument = new UIDeleteTeamCatHotelDocument(this);
                }
                return this.mUIDeleteTeamCatHotelDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteTeamCatHotelDocument mUIDeleteTeamCatHotelDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDeleteTeamCatHotelDocument : HtmlDocument
    {
        
        public UIDeleteTeamCatHotelDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/Delete/1002";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/Delete/1002";
            this.WindowTitles.Add("Delete - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteButton.WindowTitles.Add("Delete - TeamCatHotel");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatWindow3 : BrowserWindow
    {
        
        public UIIndiceClienteTeamCatWindow3()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Indice Cliente - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndiceClienteTeamCatDocument2 UIIndiceClienteTeamCatDocument
        {
            get
            {
                if ((this.mUIIndiceClienteTeamCatDocument == null))
                {
                    this.mUIIndiceClienteTeamCatDocument = new UIIndiceClienteTeamCatDocument2(this);
                }
                return this.mUIIndiceClienteTeamCatDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndiceClienteTeamCatDocument2 mUIIndiceClienteTeamCatDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndiceClienteTeamCatDocument2 : HtmlDocument
    {
        
        public UIIndiceClienteTeamCatDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Indice Cliente - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Clientes";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Clientes?NIF=5651";
            this.WindowTitles.Add("Indice Cliente - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIIndiceCrearNuevoNIFPane
        {
            get
            {
                if ((this.mUIIndiceCrearNuevoNIFPane == null))
                {
                    this.mUIIndiceCrearNuevoNIFPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIIndiceCrearNuevoNIFPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIndiceCrearNuevoNIFPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIndiceCrearNuevoNIFPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Indice\r\n\r\nCrear Nuevo \r\n\r\n\r\nNIF:   \r\n\r\n\r\n";
                    this.mUIIndiceCrearNuevoNIFPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIndiceCrearNuevoNIFPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIIndiceCrearNuevoNIFPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIIndiceCrearNuevoNIFPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIIndiceCrearNuevoNIFPane.WindowTitles.Add("Indice Cliente - TeamCatHotel");
                    #endregion
                }
                return this.mUIIndiceCrearNuevoNIFPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIIndiceCrearNuevoNIFPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResWindow1 : BrowserWindow
    {
        
        public UINuevaReservaDatosResWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINuevaReservaDatosResDocument3 UINuevaReservaDatosResDocument
        {
            get
            {
                if ((this.mUINuevaReservaDatosResDocument == null))
                {
                    this.mUINuevaReservaDatosResDocument = new UINuevaReservaDatosResDocument3(this);
                }
                return this.mUINuevaReservaDatosResDocument;
            }
        }
        #endregion
        
        #region Fields
        private UINuevaReservaDatosResDocument3 mUINuevaReservaDatosResDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResDocument3 : HtmlDocument
    {
        
        public UINuevaReservaDatosResDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/vistaSeleccionHabitacionReserva";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/vistaSeleccionHabitacionReserva?nif=12345678K&nom" +
                "bre=Eustaquio&apellidos=Habichuela&idPersona=1&fechaInicio=12%2F18%2F2016%2000%3" +
                "A00%3A00&fechaFin=12%2F19%2F2016%2000%3A00%3A00&comentarios=Yeeee&regimenComida=" +
                "1";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIGuardarReservaButton
        {
            get
            {
                if ((this.mUIGuardarReservaButton == null))
                {
                    this.mUIGuardarReservaButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Guardar Reserva";
                    this.mUIGuardarReservaButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIGuardarReservaButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIGuardarReservaButton.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUIGuardarReservaButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIGuardarReservaButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResWindow2 : BrowserWindow
    {
        
        public UINuevaReservaDatosResWindow2()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINuevaReservaDatosResDocument4 UINuevaReservaDatosResDocument
        {
            get
            {
                if ((this.mUINuevaReservaDatosResDocument == null))
                {
                    this.mUINuevaReservaDatosResDocument = new UINuevaReservaDatosResDocument4(this);
                }
                return this.mUINuevaReservaDatosResDocument;
            }
        }
        #endregion
        
        #region Fields
        private UINuevaReservaDatosResDocument4 mUINuevaReservaDatosResDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UINuevaReservaDatosResDocument4 : HtmlDocument
    {
        
        public UINuevaReservaDatosResDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nueva Reserva: Datos Reserva - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Reservas/vistaSeleccionHabitacionReserva";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Reservas/vistaSeleccionHabitacionReserva";
            this.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UINohaseleccionadoningCustom
        {
            get
            {
                if ((this.mUINohaseleccionadoningCustom == null))
                {
                    this.mUINohaseleccionadoningCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUINohaseleccionadoningCustom.SearchProperties["TagName"] = "LI";
                    this.mUINohaseleccionadoningCustom.SearchProperties["Id"] = null;
                    this.mUINohaseleccionadoningCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUINohaseleccionadoningCustom.FilterProperties["Class"] = null;
                    this.mUINohaseleccionadoningCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUINohaseleccionadoningCustom.FilterProperties["InnerText"] = "No ha seleccionado ninguna habitacion";
                    this.mUINohaseleccionadoningCustom.FilterProperties["TagInstance"] = "13";
                    this.mUINohaseleccionadoningCustom.WindowTitles.Add("Nueva Reserva: Datos Reserva - TeamCatHotel");
                    #endregion
                }
                return this.mUINohaseleccionadoningCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUINohaseleccionadoningCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Escritorio";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelIntWindow : BrowserWindow
    {
        
        public UILoginTeamCatHotelIntWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.FilterProperties["OrderOfInvocation"] = "2";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILoginTeamCatHotelDocument3 UILoginTeamCatHotelDocument
        {
            get
            {
                if ((this.mUILoginTeamCatHotelDocument == null))
                {
                    this.mUILoginTeamCatHotelDocument = new UILoginTeamCatHotelDocument3(this);
                }
                return this.mUILoginTeamCatHotelDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILoginTeamCatHotelDocument3 mUILoginTeamCatHotelDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelDocument3 : HtmlDocument
    {
        
        public UILoginTeamCatHotelDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Account/Login?ReturnUrl=%2FHabitacions";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILoginTeamCatHotelIntWindow1 : BrowserWindow
    {
        
        public UILoginTeamCatHotelIntWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDOMExplorerDocument UIDOMExplorerDocument
        {
            get
            {
                if ((this.mUIDOMExplorerDocument == null))
                {
                    this.mUIDOMExplorerDocument = new UIDOMExplorerDocument(this);
                }
                return this.mUIDOMExplorerDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDOMExplorerDocument mUIDOMExplorerDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDOMExplorerDocument : HtmlDocument
    {
        
        public UIDOMExplorerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "DOM Explorer";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "C:/WINDOWS/SYSTEM32/F12/F12Script.dll/23/dom/dom.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "res://C:\\WINDOWS\\SYSTEM32\\F12\\F12Script.dll/23/dom/dom.html";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public UIStyleListPane UIStyleListPane
        {
            get
            {
                if ((this.mUIStyleListPane == null))
                {
                    this.mUIStyleListPane = new UIStyleListPane(this);
                }
                return this.mUIStyleListPane;
            }
        }
        #endregion
        
        #region Fields
        private UIStyleListPane mUIStyleListPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIStyleListPane : HtmlDiv
    {
        
        public UIStyleListPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "styleList";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Estilo alineado{...}\r\n\r\n\r\n\r\n} \r\n\r\n\r\n\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = " selectNone";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\" selectNone\" id=\"styleList\" role=\"tree\" style=\"max-width: 581px;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "207";
            this.WindowTitles.Add("Log in - TeamCatHotel");
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISitecss1bodyPane
        {
            get
            {
                if ((this.mUISitecss1bodyPane == null))
                {
                    this.mUISitecss1bodyPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISitecss1bodyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISitecss1bodyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISitecss1bodyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "site.css (1) body{...}";
                    this.mUISitecss1bodyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISitecss1bodyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "BPT-Style-Selector-Container BPT-EditBox-MaxHeightOverride";
                    this.mUISitecss1bodyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"BPT-Style-Selector-Container BPT-EditBox-MaxHeightOverride\"";
                    this.mUISitecss1bodyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "220";
                    this.mUISitecss1bodyPane.WindowTitles.Add("Log in - TeamCatHotel");
                    #endregion
                }
                return this.mUISitecss1bodyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISitecss1bodyPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIAplicacionesenejecucWindow : WinWindow
    {
        
        public UIAplicacionesenejecucWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Aplicaciones en ejecución";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Aplicaciones en ejecución");
            #endregion
        }
        
        #region Properties
        public UIAplicacionesenejecucClient UIAplicacionesenejecucClient
        {
            get
            {
                if ((this.mUIAplicacionesenejecucClient == null))
                {
                    this.mUIAplicacionesenejecucClient = new UIAplicacionesenejecucClient(this);
                }
                return this.mUIAplicacionesenejecucClient;
            }
        }
        #endregion
        
        #region Fields
        private UIAplicacionesenejecucClient mUIAplicacionesenejecucClient;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIAplicacionesenejecucClient : WinClient
    {
        
        public UIAplicacionesenejecucClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinControl.PropertyNames.Name] = "Aplicaciones en ejecución";
            this.WindowTitles.Add("Aplicaciones en ejecución");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIAplicacionesenejecucToolBar
        {
            get
            {
                if ((this.mUIAplicacionesenejecucToolBar == null))
                {
                    this.mUIAplicacionesenejecucToolBar = new WinToolBar(this);
                    #region Criterio de búsqueda
                    this.mUIAplicacionesenejecucToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Aplicaciones en ejecución";
                    this.mUIAplicacionesenejecucToolBar.WindowTitles.Add("Aplicaciones en ejecución");
                    #endregion
                }
                return this.mUIAplicacionesenejecucToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIAplicacionesenejecucToolBar;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndexTeamCatHotelIntWindow : BrowserWindow
    {
        
        public UIIndexTeamCatHotelIntWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index - TeamCatHotel");
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexTeamCatHotelDocument1 UIIndexTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIIndexTeamCatHotelDocument == null))
                {
                    this.mUIIndexTeamCatHotelDocument = new UIIndexTeamCatHotelDocument1(this);
                }
                return this.mUIIndexTeamCatHotelDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexTeamCatHotelDocument1 mUIIndexTeamCatHotelDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIIndexTeamCatHotelDocument1 : HtmlDocument
    {
        
        public UIIndexTeamCatHotelDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Habitacions";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Habitacions";
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Habitacions/Details/1\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "15";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public UILogoutFormCustom2 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom2(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink1
        {
            get
            {
                if ((this.mUIDetailsHyperlink1 == null))
                {
                    this.mUIDetailsHyperlink1 = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions/Details/3";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions/Details/3";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Habitacions/Details/3\"";
                    this.mUIDetailsHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "21";
                    this.mUIDetailsHyperlink1.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUIDetailsHyperlink1;
            }
        }
        
        public HtmlHyperlink UIHabitacionesHyperlink
        {
            get
            {
                if ((this.mUIHabitacionesHyperlink == null))
                {
                    this.mUIHabitacionesHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHabitacionesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Habitaciones";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Habitacions\"";
                    this.mUIHabitacionesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIHabitacionesHyperlink.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUIHabitacionesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private UILogoutFormCustom2 mUILogoutFormCustom;
        
        private HtmlHyperlink mUIDetailsHyperlink1;
        
        private HtmlHyperlink mUIHabitacionesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILogoutFormCustom2 : HtmlCustom
    {
        
        public UILogoutFormCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHellorecepcionistahoHyperlink
        {
            get
            {
                if ((this.mUIHellorecepcionistahoHyperlink == null))
                {
                    this.mUIHellorecepcionistahoHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHellorecepcionistahoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHellorecepcionistahoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHellorecepcionistahoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHellorecepcionistahoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello recepcionista@hotel.fbk!";
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage";
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Manage";
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage\"";
                    this.mUIHellorecepcionistahoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHellorecepcionistahoHyperlink.WindowTitles.Add("Index - TeamCatHotel");
                    #endregion
                }
                return this.mUIHellorecepcionistahoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHellorecepcionistahoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelIWindow1 : BrowserWindow
    {
        
        public UIDetailsTeamCatHotelIWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details - TeamCatHotel");
            this.WindowTitles.Add("Lista servicios - TeamCatHotel");
            this.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsTeamCatHotelDocument1 UIDetailsTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelDocument == null))
                {
                    this.mUIDetailsTeamCatHotelDocument = new UIDetailsTeamCatHotelDocument1(this);
                }
                return this.mUIDetailsTeamCatHotelDocument;
            }
        }
        
        public UIListaserviciosTeamCaDocument UIListaserviciosTeamCaDocument
        {
            get
            {
                if ((this.mUIListaserviciosTeamCaDocument == null))
                {
                    this.mUIListaserviciosTeamCaDocument = new UIListaserviciosTeamCaDocument(this);
                }
                return this.mUIListaserviciosTeamCaDocument;
            }
        }
        
        public UIConfirmacionServicioDocument UIConfirmacionServicioDocument
        {
            get
            {
                if ((this.mUIConfirmacionServicioDocument == null))
                {
                    this.mUIConfirmacionServicioDocument = new UIConfirmacionServicioDocument(this);
                }
                return this.mUIConfirmacionServicioDocument;
            }
        }
        
        public UIConfirmacionServicioDocument1 UIConfirmacionServicioDocument1
        {
            get
            {
                if ((this.mUIConfirmacionServicioDocument1 == null))
                {
                    this.mUIConfirmacionServicioDocument1 = new UIConfirmacionServicioDocument1(this);
                }
                return this.mUIConfirmacionServicioDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsTeamCatHotelDocument1 mUIDetailsTeamCatHotelDocument;
        
        private UIListaserviciosTeamCaDocument mUIListaserviciosTeamCaDocument;
        
        private UIConfirmacionServicioDocument mUIConfirmacionServicioDocument;
        
        private UIConfirmacionServicioDocument1 mUIConfirmacionServicioDocument1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelDocument1 : HtmlDocument
    {
        
        public UIDetailsTeamCatHotelDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Habitacions/Details/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Habitacions/Details/1";
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "check-box";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled=\"disabled\" class=\"check-box\" ty";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "2";
                    this.mUIItemCheckBox.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        
        public HtmlHyperlink UISolicitarServicioHyperlink
        {
            get
            {
                if ((this.mUISolicitarServicioHyperlink == null))
                {
                    this.mUISolicitarServicioHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Solicitar Servicio";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Servicios/ListServices";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Servicios/ListServices?nHab=1";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Servicios/ListServices?nHab=1\"";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUISolicitarServicioHyperlink.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUISolicitarServicioHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIItemCheckBox;
        
        private HtmlHyperlink mUISolicitarServicioHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIListaserviciosTeamCaDocument : HtmlDocument
    {
        
        public UIListaserviciosTeamCaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Lista servicios - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Servicios/ListServices";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Servicios/ListServices?nHab=1";
            this.WindowTitles.Add("Lista servicios - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UISeleccionarServicioButton
        {
            get
            {
                if ((this.mUISeleccionarServicioButton == null))
                {
                    this.mUISeleccionarServicioButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUISeleccionarServicioButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISeleccionarServicioButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISeleccionarServicioButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Seleccionar Servicio";
                    this.mUISeleccionarServicioButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISeleccionarServicioButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISeleccionarServicioButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISeleccionarServicioButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" style=\"color: bl";
                    this.mUISeleccionarServicioButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUISeleccionarServicioButton.WindowTitles.Add("Lista servicios - TeamCatHotel");
                    #endregion
                }
                return this.mUISeleccionarServicioButton;
            }
        }
        
        public UIItemTable3 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable3(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UILogoutFormCustom3 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom3(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlHyperlink UICancelarHyperlink
        {
            get
            {
                if ((this.mUICancelarHyperlink == null))
                {
                    this.mUICancelarHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Cancelar";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Habitacio";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUICancelarHyperlink.WindowTitles.Add("Lista servicios - TeamCatHotel");
                    #endregion
                }
                return this.mUICancelarHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUISeleccionarServicioButton;
        
        private UIItemTable3 mUIItemTable;
        
        private UILogoutFormCustom3 mUILogoutFormCustom;
        
        private HtmlHyperlink mUICancelarHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIItemTable3 : HtmlTable
    {
        
        public UIItemTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "descripcion \r\n\r\nnombre \r\n\r\nprecio \r\n\r\n\r\n";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "3";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Lista servicios - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlCell UISaunaCell
        {
            get
            {
                if ((this.mUISaunaCell == null))
                {
                    this.mUISaunaCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUISaunaCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUISaunaCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUISaunaCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUISaunaCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Sauna ";
                    this.mUISaunaCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUISaunaCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUISaunaCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUISaunaCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUISaunaCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUISaunaCell.WindowTitles.Add("Lista servicios - TeamCatHotel");
                    #endregion
                }
                return this.mUISaunaCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUISaunaCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UILogoutFormCustom3 : HtmlCustom
    {
        
        public UILogoutFormCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Lista servicios - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILogoffButton
        {
            get
            {
                if ((this.mUILogoffButton == null))
                {
                    this.mUILogoffButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILogoffButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILogoffButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILogoffButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log off";
                    this.mUILogoffButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILogoffButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILogoffButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-link navbar-btn navbar-link";
                    this.mUILogoffButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-link navbar-btn navbar-li";
                    this.mUILogoffButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUILogoffButton.WindowTitles.Add("Lista servicios - TeamCatHotel");
                    #endregion
                }
                return this.mUILogoffButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILogoffButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIConfirmacionServicioDocument : HtmlDocument
    {
        
        public UIConfirmacionServicioDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Confirmacion Servicio - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Servicios/SetReservaServicio";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Servicios/SetReservaServicio?nombre=Sauna&precio=15&idServ" +
                "icio=4&numeroHab=1&fechaInicio=12%2F18%2F2016%2020%3A24%3A47&fechaFin=12%2F18%2F" +
                "2016%2020%3A24%3A47";
            this.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIFechainicioEdit
        {
            get
            {
                if ((this.mUIFechainicioEdit == null))
                {
                    this.mUIFechainicioEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechainicioEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaInicio";
                    this.mUIFechainicioEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaInicio";
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha inicio: ";
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaInicio\" class=\"form-control\" ";
                    this.mUIFechainicioEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIFechainicioEdit.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechainicioEdit;
            }
        }
        
        public HtmlEdit UIFechafinEdit
        {
            get
            {
                if ((this.mUIFechafinEdit == null))
                {
                    this.mUIFechafinEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechafinEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fechaFin";
                    this.mUIFechafinEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fechaFin";
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha fin: ";
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fechaFin\" class=\"form-control\" id=";
                    this.mUIFechafinEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIFechafinEdit.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
                    #endregion
                }
                return this.mUIFechafinEdit;
            }
        }
        
        public UIFrmCustom UIFrmCustom
        {
            get
            {
                if ((this.mUIFrmCustom == null))
                {
                    this.mUIFrmCustom = new UIFrmCustom(this);
                }
                return this.mUIFrmCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIFechainicioEdit;
        
        private HtmlEdit mUIFechafinEdit;
        
        private UIFrmCustom mUIFrmCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIFrmCustom : HtmlCustom
    {
        
        public UIFrmCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = "frm";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "name=\"frm\" action=\"/Servicios/ConfirmRes";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIConfirmarSolicitudButton
        {
            get
            {
                if ((this.mUIConfirmarSolicitudButton == null))
                {
                    this.mUIConfirmarSolicitudButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIConfirmarSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIConfirmarSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIConfirmarSolicitudButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Confirmar Solicitud";
                    this.mUIConfirmarSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIConfirmarSolicitudButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIConfirmarSolicitudButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIConfirmarSolicitudButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIConfirmarSolicitudButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUIConfirmarSolicitudButton.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
                    #endregion
                }
                return this.mUIConfirmarSolicitudButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIConfirmarSolicitudButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIConfirmacionServicioDocument1 : HtmlDocument
    {
        
        public UIConfirmacionServicioDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Confirmacion Servicio - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Servicios/SetReservaServicio";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Servicios/SetReservaServicio?nombre=Sauna&precio=15&idServ" +
                "icio=4&numeroHab=2&fechaInicio=12%2F18%2F2016%2021%3A19%3A13&fechaFin=12%2F18%2F" +
                "2016%2021%3A19%3A13";
            this.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public UIFrmCustom1 UIFrmCustom
        {
            get
            {
                if ((this.mUIFrmCustom == null))
                {
                    this.mUIFrmCustom = new UIFrmCustom1(this);
                }
                return this.mUIFrmCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFrmCustom1 mUIFrmCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIFrmCustom1 : HtmlCustom
    {
        
        public UIFrmCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = "frm";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "name=\"frm\" action=\"/Servicios/ConfirmRes";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICancelarHyperlink
        {
            get
            {
                if ((this.mUICancelarHyperlink == null))
                {
                    this.mUICancelarHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICancelarHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Cancelar";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Habitacions";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Habitacions";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Habitacio";
                    this.mUICancelarHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUICancelarHyperlink.WindowTitles.Add("Confirmacion Servicio - TeamCatHotel");
                    #endregion
                }
                return this.mUICancelarHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICancelarHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelIWindow2 : BrowserWindow
    {
        
        public UIDetailsTeamCatHotelIWindow2()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details - TeamCatHotel";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsTeamCatHotelDocument2 UIDetailsTeamCatHotelDocument
        {
            get
            {
                if ((this.mUIDetailsTeamCatHotelDocument == null))
                {
                    this.mUIDetailsTeamCatHotelDocument = new UIDetailsTeamCatHotelDocument2(this);
                }
                return this.mUIDetailsTeamCatHotelDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsTeamCatHotelDocument2 mUIDetailsTeamCatHotelDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "14.0.23107.0")]
    public class UIDetailsTeamCatHotelDocument2 : HtmlDocument
    {
        
        public UIDetailsTeamCatHotelDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - TeamCatHotel";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Habitacions/Details/3";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:21013/Habitacions/Details/3";
            this.WindowTitles.Add("Details - TeamCatHotel");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISolicitarServicioHyperlink
        {
            get
            {
                if ((this.mUISolicitarServicioHyperlink == null))
                {
                    this.mUISolicitarServicioHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISolicitarServicioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Solicitar Servicio";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Servicios/ListServices";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:21013/Servicios/ListServices?nHab=3";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Servicios/ListServices?nHab=3\"";
                    this.mUISolicitarServicioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "14";
                    this.mUISolicitarServicioHyperlink.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUISolicitarServicioHyperlink;
            }
        }
        
        public HtmlCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIItemCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "check-box";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "disabled=\"disabled\" class=\"check-box\" ty";
                    this.mUIItemCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "2";
                    this.mUIItemCheckBox.WindowTitles.Add("Details - TeamCatHotel");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISolicitarServicioHyperlink;
        
        private HtmlCheckBox mUIItemCheckBox;
        #endregion
    }
}
#endregion